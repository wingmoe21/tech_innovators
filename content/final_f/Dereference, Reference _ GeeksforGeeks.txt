Transcript of the audio for the lecture:
0.089 - 4.472:  Friends today in this video we will discuss about dereference and reference of pointers.
6.253 - 11.537: So after going through this video you will be able to get the output of following snippet of codes.
12.417 - 18.741: Like a series of m% and asterisk operator on a pointer variable and so on.
20.543 - 21.984: So this is our first example.
22.564 - 24.425: In this example there is a main method.
26.807 - 29.929: And we have declared a pointer which is pointing to a character.
31.112 - 32.933:  And the value stored is gigs for gigs.
34.154 - 37.896: After that we will print a sequence of operator on this pointer variable.
39.077 - 41.118: So this is the memory map of gigs for gigs.
41.839 - 46.382: Like G is stored at 100, E is stored at 101 location and so on.
46.942 - 51.345: And at the last null character is stored at 113 address location.
52.866 - 56.208: Now PTR is a pointer which is pointing to a character variable.
56.468 - 58.89: So PTR will contain the base address of G.
60.296 - 89.826:  or gigs for gigs so base address is 100 so 100 will be stored in ptr and we have assumed that address of ptr is 200 now we will see what will be the execution sequence of this printf statement let us start so first we will execute this one so it will be star ptr so star ptr in ptr what what is the value 100 so it will
90.979 - 120.345:  sol asterisk 100 this one okay so asterisk 100 will give us the value which is stored at location 100 and which is g so it will give us g okay next operator is end percent so m percent of g will give us address of g which is 100 okay then star operator we will apply on 100 it means it will fetches the value which is stored at location 100
121.325 - 129.509:  So it will give us G. Then again M% will act on G. It will give us the address of G. Okay.
130.649 - 130.929: Sorry.
131.95 - 132.75: So it will give us 100.
134.171 - 138.052: Then again asterisk operator is operated on 100.
138.713 - 141.634: It means it will again fetch the value which is stored at 100.
142.274 - 148.117: So it will give us G. So the output is G. Let us go to the next example.
150.086 - 175.264:  so again example is same but the sequence of operator has been changed so let us see the series of execution of this printf statement ok so see m% of ptr m% of ptr will give us address of ptr and which is 200 ok then we will apply asterisk operator on 200
176.776 - 196.772:  it will give us the value which is present at this address so at address 200 what is the value present 100 okay so 100 will come then on 100 we will apply again m percent so what it will give address of 100 okay so what is the address of 100 again 200 okay 200
200.396 - 229.314:  and if we will apply asterisk operator on this 200 what it will give it will give us the value which is stored at 200 that is 100 only ok now in the printf statement let us carefully watch here we have used star sorry %s ok what is the meaning of %s it will start from a address ok and it will fetch the string up to the null character so
230.117 - 257.835:  what is the value of this execution series 100 so it will start from 100 as the base address and it will go to the null character so what will be the value so output will be gigs for gigs okay now let us see the programming code so this is our first code which we have discussed let us
258.547 - 260.648:  Carefully watch the output of this code.
284.663 - 287.204: See output is G only.
287.865 - 288.125: Okay.
288.877 - 291.322:  So it is matching with our discussed output.
291.923 - 294.267: Let us see our next code.
295.469 - 297.553: So this is our next code which we have discussed.
298.174 - 299.897: Let us check the output of this code.
317.25 - 346.382:  so see output is gigs for gigs ok now see this icon is blinking again and again it means we have not completed our program execution sequence why because we have used get care here ok so it needs some character so if I will give one character and press enter it will be completed ok thank you for watching these slides thank you for watching


The content from the lecture slides:
Page 1: The slide discusses exceptions where pointer and array accesses differ. The `sizeof` operator gives the total memory used by all elements in an array, while for a pointer, it gives the memory used by the pointer itself. The address-of operator (`&`), when used with an array, is an alias for the address of the first element (`&array[0]`). For a pointer, `&pointer` gives the pointer's address.

Page 2: This slide outlines the differences between initializing an array and a pointer with a string literal. Initializing a character array with a string literal sets the array's elements to the characters of the string and a null terminator. In contrast, initializing a pointer with a string literal sets the pointer to the address where the string literal is stored, which is typically read-only memory, making the string unchangeable. Additionally, pointer variables can be assigned new values, while array variables cannot.

Page 3: The slide displays an example using integer and character arrays and a pointer to a character. For the integer array 'int array[4]', 'sizeof(array)' would return the size of the entire array (e.g., 16 bytes if integers are 4 bytes each), while 'array', '&array', and '&array[0]' would result in the starting address of the array (e.g., 100). For the character array initialized to "abc", both 'char arr[]' and 'char *ptr' point to the starting address (e.g., 100), but attempting to assign a new value through the pointer (like '*(ptr+1)') would cause an error because it's stored in read-only memory. Assigning directly to the array name (like 'arr = 98') will also throw an error due to incompatible types.

Page 4: The slide shows the ending of the presentation, with the text "Thank you for watching! Please leave us your comments.", which indicates the conclusion of the lecture or presentation.
Representation of Double pointer ...
1. Int a = 80;
2. Int *p=&a;
3. Int **q=&p;
a=80
1000
VectorStock
VectorStock.com/3787275
p=1000
2000
q=2000
3000
Hey, a is a variable stored at 1000 location, p is a
pointer which contains the address of a variable and
q is a double pointer which contains the address of p
pointer.
**q explanation:
*q will give the value at
location 2000, which is 1000.
• **q will give the value at
location 1000, which is 80
Value of **q = 80
Value of *p = 80
Value of a = 80
Value of p = 1000
Value of q = 3000
Value of &a = 1000Example ...
// C program to demonstrate pointer to pointer
int main()
{
int var = 789;
// pointer for var
int *ptr2;
}
// double pointer for ptr2
int **ptr1;
// storing address of var in ptr2
ptr2 = &var;
// Storing address of ptr2 in ptr1
ptr1 = &ptr2;
// Displaying value of var using
// both single and double pointers
printf("Value of var = %d\n", var );
printf("Value of var using single pointer = %d\n", *ptr2 );
printf("Value of var using double pointer = %d\n", **ptr1);
return 0;
Var=789
1000
Output:
Var = 789
Ptr2 = 1000
2000
*ptr2 = 789
**ptr1 = 789
Ptr1=2000
3000AutoSave Off HE
File Home Insert Design Transitions Animations Slide Show
X Cut
Paste
1
2
3
4
Copy
Format Painter
Clipboard
DG
Slide 3 of 4
03
New
Slide-
Double
Pointer in C
H
Cutput
OG Thank you for watching!
Layout-
Reset
Section-
Slides
BIUS AV-Aa-
Click to add notes
-18
e
Font
Review
Α' Α' Α
A
View
Help Storyboarding
// double pointer for ptr2
int **ptr1;
Example ...
// C program to demonstrate pointer to pointer
int main()
{
int var 789;
// pointer for var
int *ptr2;
// storing address of var in ptr2
ptr2 = &var;
Pointers Basic
Paragraph
// Storing address of ptr2 in ptr1
ptr1 = 8&ptr2;
Tell me what you want to do
Text Direction - VE
[+]Align Text -
DOOALL
4341
Convert to SmartArt-
// Displaying value of var using
// both single and double pointers
x]]
printf("Value of var %d\n", var );
printf("Value of var using single pointer %d\n", *ptr2 );
printf("Value of var using double pointer = %d\n", **ptr1);
return 0;
}
Arrange Quick
Styles -
Drawing
Var=789
1000
Shape Fill-
Shape Outline -
Shape Effects -
Ptr2 = 1000
2000
Output:
Var = 789
*ptr2 = 789
**ptr1 = 789
Notes
01
Vishal Gulia
88
Find
Replace
Select -
Editing
Ptr1=2000
3000
Share
Dictate
Voice
^ D (4¹))
Comments
+76%
9:46 PM
3/6/2019
«»AutoSave Off HE
File Home Insert Design Transitions Animations Slide Show Review
X Cut
Paste
1
N
3
4
DG
Slide 3 of 4
Copy
New
BIUSAV - Aa-
Format Paintersers Slider Sectionnal_documents Pointers basic.cpp Notepad++
Clipboard File Edit Search VislidesEncoding Language Settings TocontMacro Run Plugins Window ?
basic cpp
03
OG Thank you for watching!
Layout-
Reset
proran to demonstrate pointer to pointer
Pointer in de <stdio.h>
11
Double
C
B(
source file
int var = 789:
// pointer for var
int ptr2:
return
double pointer for ptr2
*ptri:
roring address of var in ptr2
// Storing address of ptr2 in ptrl
ptrl- &ptr2;
18
Click to add notes
View
Α' Α' Α
A EE
Example ...
}
Help Storyboarding
// danhle pointer for ptr2
int **ptr1;
Pointers Basic
// C program to demonstrate pointer to pointer
int main()
int var 789;
// pointer for var
int *ptr2;
Tell me what you want to do
Text Direction - VE
[#] Align Text -
DODALL
совет
Convert to SmartArt-
Paragraph
Istoring address of var in ptr2
ptr2 = &var;
Displaying value of var using
// bath single and double pointers
printf("Value of var d\n", var );
printf("Value of var using sigle pointer - Ad\n", *ptr2 );
printf("value of var using double pointer ptr); of var using
// both single and double pointers
printf("Value of var %d\n", var );
printf("Value of var using single pointer
printf("Value of var using double pointer
return 0;
// Storing address of ptr2 in ptri
ptr1 = &ptr2;
%d\n", "ptr2 );
%d\n", **ptr1);
length:565 lines: 27
Arrange Quick
Styles -
Drawing
Var=789
1000
Output:
Var = 789
*ptr2 = 789
**ptr1 = 789
Ln: 18 Col:5 Sel: 010
Shape Fill -
Shape Outline -
Shape Effects-
Ptr2 = 1000
2000
Notes
Vishal Gulia
O Find
Do
Replace
Select-
Editing
Ptr1=2000
3000
Windows (CR LE UTF-8
Share
Dictate
Voice
X
Comments
+76% 3
19:46 PM
3/6/2019C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
PC
basic.cpp basic1.cpp basic2.cpp X
2
3
4
5
6
8
10
11
12
13
14
15
16
67
basic3.cpp
// C program to demonstrate pointer to pointer
#include <stdio.h>
int main()
B{
17
18
19
20
21
22
23
24
25
26 }
27
int var = 789;
// pointer for var
int *ptr2;
SC++ source file
// double pointer for ptr2
int **ptrl;
// storing address of var in ptr2
ptr2 = &var;
// Storing address of ptr2 in ptri
ptrl = &ptr2;
return 0;
// Displaying value of var using
// both single and double pointers
printf("Value of var = %d\n", var );
printf("Value of var using single pointer = %d\n", *ptr2 );
printf("Value of var using double pointer = %d\n", **ptrl);
e
Example
Ae
ABC
length: 565 lines: 27
Var-789
1000
Ptr2 = 1000
2000
Output:
Var = 789
*ptr2 = 789
**ptrl = 789
Ln: 18 Col:5 Sel: 010
Ptr1-2000
Windows (CRLF)
UTF-8
T
^ ( 4 ))
9:46 PM
3/6/2019
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
|DC|
basic.cpp basic1.cpp X basic2.cpp X basic3.cpp X
1
2
34567890N
10
TELLANNNN222~
11
12
13
14
15
16
17
18
19
// C program to demonstrate pointer to pointer
#include <stdio.h>
int main()
B(
int var = 789;
C++ source file
// pointer for var
int *ptr2;
// double pointer for ptr2
int **ptrl;
// storing address of var in ptr2
ptr2 = &var;
// Storing address of ptr2 in ptrl
ptrl = &ptr2;
// Displaying value of var using
// both single and double pointers
printf("Value of var = %d\n", var );
printf ("Value of var using single pointer = %d\n", *ptr2 );
printf("Value of var using double pointer = %d\n", **ptrl);
20
21
22
23
24
25 return 0;
}
26
27
e
A e
length: 565 lines: 27
Ln: 18 Col:5 Sel: 010
Windows (CRLF)
UTF-8
I
0
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
464
basic.cpp X basic1.cpp X basic2.cpp
1
2
345678906
10
11
12
13
14
15
16
17
LE
18
19
1222NNNN2
basic3.cpp
// C program to demonstrate pointer to pointer
#include <stdio.
int main()
WINDOWS\system32\cmd.exe
8(
26
27
int var = 789;
C++ source file
// pointer for var
int *ptr2:
// double pointer for ptr2
int **ptrl;
// storing address of var in ptr2
ptr2 = &var;
// Storing address of ptr2 in ptri
ptrl=&ptr2;
20
21
22
23
24
25 return 0;
}
// Displaying value of var using
// both single and double pointers
printf ("Value of var = %d\n", var );
printf ("Value of var using single pointer = 3d\n", *ptr2 );
printf ("Value of var using double pointer = $d\n", **ptrl);
A e
N
ABC
length: 566 lines: 27
Ln: 13 Col:40 Sel: 010
Windows (CRLF) UTF-8
AD (4¹)
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
NOOPE|
basic.cpp X basic1.cpp basic2.cpp basic3.cpp X
1 // C program to demonstrate pointer to pointer
2 #includ C\WINDOWS\system32\cmd.exe
3
4
5
6
7
8
9
10
11
TEE-
12
13
14
15
16
17
18
19
1722NNNN22
20
21
22
23
24
25
int mai
(
26 }
27
Microsoft Windows [Version 10.0.16299.967]
int (c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>
C++ source file
int *ptr2;
// double pointer for ptr2
int **ptri;
// storing address of var in ptr2
ptr = &var;
// Storing address of ptr2 in peri
ptr=sptr2;
// Displaying valus of var using
//both single and double pointers
return
printf("value of var - din", var );
printf ("value of var using single pointer #d\n", *ptr2 );
printf("Value of var using double pointer d\n", **ptr);
ег
N
ABC
length: 566 lines: 27
Ln: 13 Col:40 Sel: 010
X
Windows (CRLF)
UTF-8
^ ( 4»)
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
GPC
basic.cpp X basic1.cpp basic2.cpp X basic3.cpp
1 // C program to demonstrate pointer to pointer.
C:\WINDOWS\system32\cmd.exe
23456&SOHN3
7
8
4 (
9
TELLAANNNNNNNN
10
11
12
13
14
15
16
17
18
19
20
21
22
3 T
23
#inclu
int ma Microsoft Windows [Version 10.0.16299.967]
26
27
(c) 2017 Microsoft Corporation. All rights reserved.
in
C:\Users\vgulia>
C++ source file
in *ptr2:
1/double pointer for ptr2
in **ptri;
// storing address of var in ptr2
pt 2 = &var;
// Storing address of ptr2 in peri
pt=&ptr2:
24
25 return
}
// Displaying value of var using
//both single and double pointers
printf("value of var = %d\n", var );
printf("value of var using single pointer = $d\n", *ptr2 );
printf ("Value of var using double pointer d\n", **ptr);
ег
N]
x]]
ABC
length: 566 lines: 27
T
Ln: 13 Col:40 Sel: 010
DX
Windows (CRLF)
UTF-8
^ ( 4»)
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
*654
basic.cpp X basic1.cpp basic2.cpp X basic3.cpp
1 // C program to demonstrate pointer to pointer.
2 #includ C:\WINDOWS\system32\cmd.exe
3
4
5
6
7
8
9
10
11
12
13
TELLAANNNNNNNN
14
15
16
17
18
19
20
21
22
23
24
25
26
27
int mai
(
Microsoft Windows [Version 10.0.16299.967]
int (c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>
C++ source file
int *ptr2:
// double pointer for ptr2
int **ptri;
// storing address of var in ptr2
pt = &var;
// Storing address of ptr2 in peri
pt=sptr2;
// Displaying value of var using
// both single and double pointers
printf("Valte of var = 3d\n", var );
printf ("value of var using single pointer = $d\n", *ptr2 );
printf("Value of var using double pointer #d\n", **ptrl);
return
}
A e
N
x]]
ABC
length: 566 lines: 27
Ln: 13 Col:40 Sel: 010
X
Windows (CRLF)
UTF-8
^□ (4»)
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
4554
basic.cpp X basic1.cpp X basic2.cpp
basic3.cpp
1 // C program to demonstrate pointer to pointer
2
#include <stdio.h>
345678906
10
11
12
13
14
15
16
17
18
19
1122NNNN22
20
21
22
int main()
26
27
8(
C:\WINDOWS\system32\cmd.exe
int var 7 Microsoft Windows [Version 10.0.16299.967]
C++ source file
// pointer
int *ptr2:
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>
// double poenter for ptr2
int **ptrl;
// storing address of var in ptr2
ptr2 = &var;
23
24
25 return 0;
}
// Storing adress of ptr2 in peri
ptrl=&ptr2
// Displaying value of var using
// both single and double pointers
printf("Valu af vai = 3d\n", var );
printf("Valu of var using single pointer = %d\n", *ptr2 );
printf("Value of var using double pointer 3d\n", **ptr);
A e
XI
length: 566 lines: 27
Ln: 13 Col:40 Sel: 010
Windows (CRLF) UTF-8
^□ (4»)
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
*P
basic.cpp X basic1.cpp basic2.cpp basic3.cpp X
1 // C program to demonstrate
2
#include <stdio.h>
345678906
10
11
12
13
14
15
16
17
18
19
1122NNNN22
20
21
22
int main()
8(
C++ source file
int var = 789;
C:\WINDOWS\system32\cmd.exe
Microsoft Windows [Version 10.0.16299.967]
// pointer for var (c) 2017 Microsoft Corporation. All rights reserved.
int *ptr2:
C:\Users\vgulia>
// double pointer for
int **ptrl;
pointer to pointer
// storing address of var in ptr2
ptr2 = &var;
// Storing address of ptr2 in perl
ptrl = sptr2;
// Displaying value of var using
// both single and couble pointers
23
24
25 return 0;
}
26
27
printf("Value of van din", var );
printf("Value of var using single pointer = %d\n", *ptr2 );
printf("Value of var using double poshter d\n", **ptr);
Ĥ er
XI
length 500 se
I
0 X
^ ( 4»)
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
*P
basic.cpp X basic1.cpp basic2.cpp
1 // C program to demonstrate
2
#include <stdio.h>
345678906
10
11
12
13
14
15
16
17
18
19
1122NNNN22
20
21
22
int main()
8(
int var = 789;
C++ source file
// pointer for var
int *ptr2:
// double pointer for ptr
int **ptrl;
basic3.cpp
pointer to pointer
// storing address of var ptr2
ptr2 = &var;
C:\WINDOWS\system32\cmd.exe
Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>
// Storing address of ptr in peri
ptrl=&ptr2;
23
24
25 return 0;
}
26
27
// Displaying value of va
using
// both single and double ointers
printf("Value of var = %d", var );
printf("Value of var using single pointer = %d\n", *ptr2 );
printf("Value of var using double poshter d\n", **ptr);
e
Ĥer
Tength: 566 lines: 27
Ln: 13 Col:40 Sel:010
T
Windows (CRLF)
UTF-8
^ D (4)
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
4554
basic.cpp X basic1.cpp Xbasic2.cpp X
// C program to demonstrate
#include <stdio.h>
int main()
8(
1
2
345678906
10
11
12
13
14
15
16
17
18
19
1122NNNN22
20
21
22
int var = 789;
C++ source file
// pointer for var
int *ptr2:
// double pointer for ptr2
int **ptrl;
basic3.cpp
pointer to pointer
// storing address of var in ptr
ptr2 = &var;
23
24
25 return 0;
26 }
27
// Storing address of ptr2 in pt-
ptrl=&ptr2;
C:\WINDOWS\system32\cmd.exe
Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>
// Displaying value of var using
// both single and double pointes
printf("Value of var = %d\n", va );
printf("Value of var using single pointe: = %d\n", *ptr2 );
printf("Value of var using doubl ponte: d\n", **ptr);
e
A e
x]]
length: 566 lines: 27
Ln: 13 Col:40 Sel: 010
UTF-8
AD (4»)
Windows (CRLF)
0
X
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
4554
basic.cpp X basic1.cpp Xbasic2.cpp X
basic3.cpp
1 // C program to demonstrate pointer to pointer
2
#include <stdio.h>
345678906
10
11
12
13
14
15
16
17
18
19
1122NNNN22
20
21
22
int main()
8(
int var = 789;
C++ source file
// pointer for var
int *ptr2:
// double pointer for ptr2
int **ptrl;
// storing address of var in ptr
ptr2 = &var;
// Storing address of ptr2 in pt
ptrl=&ptr2;
// Displaying value of var using
// both single and double pointe
printf("Value of var = %d\n", va
printf("Value of var using singl
printf("Value of var using doubl
23
24
25 return 0;
}
26
27
e
C:\WINDOWS\system32\cmd.exe
Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>
Ae
);
pointe: = id\n", *ptr2 );
ponre: d\n", **ptr);
N
XT
ABC
length: 566 lines: 27
Ln: 13 Col:40 Sel: 010
Windows (CRLF) UTF-8
^ D (4)
X
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
DPC
basic.cpp X basic1.cpp
basic2.cpp X
basic3.cpp X
1 // C program to demonstrate pointer to painter
2
#include <stdio.h>
3456r0906
4 (
7
8
10
11
12
13
14
15
16
17
18
19
17222 N N N N 2
20
22
23
24
int main()
26
27
int var = 789;
C++ source file
// pointer for var
int *ptr2;
// double pointer for ptr2
int **ptri;
25 return 0;
}
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
Value of var = 789
Value of var using single pointer = 789
// storing address of var in ptr2value of var using double pointer = 789
ptr2 = &var;
// Storing address of ptr2 in ptr
ptrl = &ptr2;
C:\WINDOWS\system32\cmd.exe
Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
// Displaying value of var using
// both single and double pointer
printf("Value of var = %d\n", var);
printf("Value of var using single pointer = \d\n", *ptr2 );
printf("Value of var using double pointer = %d\n", **ptr);
e
e
ABC
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
NEXI-9
length: 566 lines: 27
Ln: 13 Col:40 Sel: 010
1
Windows (CRLF)
UTF-8
^□ (4¹))
9:46 PM
3/6/2019
X
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
DPC
basic.cpp X basic1.cpp
basic2.cpp X
basic3.cpp X
1 // C program to demonstrate pointer to point C:\WINDOWS\system32\cmd.exe
2
#include <stdio.h>
3456r0906
4 (
7
8
10
11
12
13
14
15
16
17
18
19
17222 N N N N 2
20
22
23
24
int main()
26
27
int var = 789;
C++ source file
// pointer for var
int *ptr2;
// double pointer for ptr2
int **ptri;
// storing address of var in ptr2 DC2
ptr2 = &var;
25 return 0;
}
// Storing address of ptr2 in ptrl
ptrl = &ptr2;
// Displaying value of var using
// both single and double pointers
printf("Value of var = %d\n", var );
printf("Value of var using single pointe = %d\n", *ptr2 );
printf("Value of var using double pointe %d\n", **ptrl);
e
e
Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
ABC
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
Value of var = 789
Value of var using single pointer = 789
Value of var using double pointer = 789
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
x]]
length: 566 lines: 27
Ln: 13 Col:40 Sel: 010
Windows (CRLF)
^
UTF-8
( 4»)
9:46 PM
3/6/2019
U
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
DPC
basic.cpp X basic1.cpp
basic2.cpp X basic3.cpp X
1 // C program to demonstrate pointer to pointer
#include <stdio.h>
2
3456r0906
4 (
7
8
10
11
12
13
14
15
16
17
18
19
17222 N N N N 2
20
22
23
24
int main()
26
27
int var = 789;
C++ source file
// pointer for var
int *ptr2;
// double pointer for ptr2
int **ptri;
// storing address of var in ptr2 DC2
ptr2 = &var;
25 return 0;
}
// Storing address of ptr2 in ptrl
ptrl = &ptr2;
// Displaying value of var using
// both single and double pointers
printf("Value of var = %d\n", var );
printf("Value of var using single pointer = %d\n", *ptr2 );
printf("Value of var using double pointer = dn", **ptr);
e
e
C:\WINDOWS\system32\cmd.exe
Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
ABC
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
Value of var = 789
Value of var using single pointer = 789
Value of var using double pointer 789
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
x]]
length: 566 lines: 27
Ln: 13 Col:40 Sel: 010
Windows (CRLF)
UTF-8
^ ( 4»)
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
DPC
basic.cpp X basic1.cpp
basic2.cpp X basic3.cpp X
1 // C program to demonstrate pointer to pointer
2
#include <stdio.h>
3456r0906
4 (
7
8
10
11
12
13
14
15
16
17
18
19
17222 N N N N 2
20
22
23
24
int main()
26
27
int var = 789;
C++ source file
// pointer for var
int *ptr2;
// double pointer for ptr2
int **ptri;
// storing address of var in ptr2 DC2
ptr2 = &var;
25 return 0;
}
// Storing address of ptr2 in ptri
ptrl = &ptr2;
// Displaying value of var using
// both single and double pointers
printf("Value of var = %d\n", var );
printf("Value of var using single pointer = %d\n, *ptr2 );
printf("Value of var using double pointer = %d\n **ptrl);
e
C:\WINDOWS\system32\cmd.exe
Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
e
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
Value of var 789
Value of var using single pointer = 789
Value of var using double pointer = 789
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
x]]
length: 566 lines: 27
Ln: 13 Col:40 Sel: 010
Windows (CRLF)
^
UTF-8
( 4»)
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp-
Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
DPC
basic.cpp X basic1.cpp
basic2.cpp X basic3.cpp X
1 // C program to demonstrate pointer to pointer
2
#include <stdio.h>
3456r0906
4 (
7
8
10
11
12
13
14
15
16
17
18
19
17222 N N N N 2
20
22
23
24
int main()
26
27
int var = 789;
C++ source file
// pointer for var
int *ptr2;
// double pointer for ptr2
int **ptri;
// storing address of var in ptr2 DC2
ptr2 = &var;
25 return 0;
}
// Storing address of ptr2 in ptri
ptrl = &ptr2;
// Displaying value of var using
// both single and double pointers
printf("Value of var = %d\n", var );
printf("Value of var using single pointer = %d\n", *ptr2 );
printf("Value of var using double pointer = %d\n", *ptrl);
e
e
C:\WINDOWS\system32\cmd.exe
Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
ABC
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
Value of var = 789
Value of var using single pointer = 789
Value of var using double pointer = 789
c:\Users\vgulia\Documents\personal_documents\C_Pointers>
x]]
length: 566 lines: 27
Ln: 13 Col:40 Sel: 010
Windows (CRLF) UTF-8
AD (4»)
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
DPC
basic.cpp X basic1.cpp
basic2.cpp X basic3.cpp X
1 // C program to demonstrate pointer to pointer
2
#include <stdio.h>
3456r0906
4 (
7
8
10
11
12
13
14
15
16
17
18
19
17222 N N N N 2
20
22
23
24
int main()
26
27
int var = 789;
C++ source file
// pointer for var
int *ptr2;
// double pointer for ptr2
int **ptri;
// storing address of var in ptr2 DC2
ptr2 = &var;
25 return 0;
}
// Storing address of ptr2 in ptri
ptrl = &ptr2;
// Displaying value of var using
// both single and double pointers
printf("Value of var = %d\n", var );
printf("Value of var using single pointer = %d\n", *pcr2 );
printf("Value of var using double pointer = %d\n", **ptr);
e
GC:\WINDOWS\system32\cmd.exe,
Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
e
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
Value of var = 789
Value of var using single pointer = 789
Value of var using double pointer = 789
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
XI
length: 566 lines: 27
Ln: 13 Col:40 Sel: 010
Windows (CRLF)
^
UTF-8
( 4»)
9:46 PM
3/6/2019
X
INS
X*C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
DPC
basic.cpp X basic1.cpp
basic2.cpp X
basic3.cpp X
1 // C program to demonstrate pointer to pointer
2
#include <stdio.h>
3456r0906
4 (
7
8
10
11
12
13
14
15
16
17
18
19
17222 N N N N 2
20
22
23
24
int main()
26
27
int var = 789;
C++ source file
// pointer for var
int *ptr2;
// double pointer for ptr2
int **ptri;
// storing address of var in ptr2 DC2
ptr2 = &var;
25 return 0;
}
// Storing address of ptr2 in ptri
ptrl = &ptr2;
// Displaying value of var using
// both single and double pointers
printf("Value of var = %d\n", var );
printf("Value of var using single pointer = %d\n", *pt=2 );
printf("Value of var using double pointer = %d\n", **pt1);
e
e
C:\WINDOWS\system32\cmd.exe
Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
ABC
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
Value of var = 789
Value of var using single pointer = 789
Value of var using double pointer
- 789
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
NEX19
length: 566 lines: 27
Ln: 13 Col:40 Sel: 010
Windows (CRLF)
UTF-8
^ ( 4»)
9:46 PM
3/6/2019
X
INS
XPaste
1
AutoSave Off HE
File Home Insert Design Transitions Animations Slide Show Review
X Cut
2
3
4
Copy
Format Painter
Clipboard
DG
Slide 3 of 4
0.3
New
Slide -
Double
Pointer in C
Dutput
OG Thank you for watching!
Layout-
Reset
Section-
Slides
A A A
BIUS AV-Aa-A.
Click to add notes
e
Font
18
}
View Help Storyboarding Tell me what you want to do
VE
DODALL
совет
Example ...
// C program to demonstrate pointer to pointer
int main()
{
int var 789;
// pointer for var
int *ptr2;
// double pointer for ptr2
int **ptr1;
// storing address of var in ptr2
ptr2 = &var;
Paragraph
// Storing address of ptr2 in ptr1
ptr1 = 8ptr2;
Pointers Basic
// Displaying value of var using
// both single and double pointers
return 0;
X]
printf("Value of var %d\n", var );
printf("Value of var using single pointer %d\n", *ptr2 );
printf("Value of var using double pointer = %d\n", **ptr1);
Text Direction-
Align Text
Convert to SmartArt-
Arrange Quick
Styles -
Drawing
Var=789
1000
Shape Fill -
Shape Outline -
Shape Effects -
Ptr2 = 1000
2000
Output:
Var = 789
*ptr2 = 789
**ptr1 = 789
Notes
Vishal Gulia
88
Find
Replace
Select-
Editing
Ptr1=2000
3000
Share
Dictate
Voice
^ ( 4 ))
Comments
>«»
+76% 53
9:47 PM
3/6/2019Paste
1
AutoSave Off HE
File Home Insert Design Transitions Animations Slide Show Review
X Cut
A A A
2
3
4
Copy
Format Painter
Clipboard
DG
Slide 4 of 4
New
Slide
0.3
Double
Pointer in C
|
OG Thank you for watching!
Layout-
Reset
Section-
Slides
Click to add notes
BIUS AV Aa-A..
Aer
18
Font
N] /
View Help Storyboarding Tell me what you want to do
VE
DODALL
совет
Pointers Basic
Paragraph
DG
Text Direction-
Align Text -
Convert to SmartArt-
Arrange Quick
Styles -
Drawing
Shape Fill -
Shape Outline -
Shape Effects -
Thank you for watching!
Please leave us your comments.
Notes
Vishal Gulia
O Find
88
Replace
Select-
Editing
Share
Dictate
Voice
^ ( 4 ))
Comments
+ 76% 53
9:47 PM
3/6/2019