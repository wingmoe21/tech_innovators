Transcript of the audio for the lecture:
0.67 - 3.394:  Hello friends and welcome to GeeksforGeeks.
4.356 - 8.302: In this tutorial, we learn about Min Cost Path Problem.
9.895 - 30.279:  problem statement given a cost matrix where all the costs are positive and a position m,n in the cost matrix, I need to find a function that returns cost of minimum cost path to reach m,n from 0,0.
31.899 - 39.701: The total cost of the path is sum of all the costs on that path including source and destination.
42.506 - 52.914:  the allowed movements to reach the cell m,n from the cell 0,0 are up, right and diagonally upper.
54.655 - 54.775: i.e.
55.255 - 60.639: from a given cell i,j I can go to i plus 1,j i.e.
60.82 - 64.022: upper cell i,j plus 1 i.e.
64.082 - 69.386: right cell or i plus 1,j plus 1 i.e.
69.766 - 70.827: diagonally upper cell
73.769 - 83.318:  Taking example of cost matrix of size 3x3 which is like this and I want to reach the cell 2,2.
86.561 - 93.247: So to reach the cell 2,2 from the cell 0,0 the minimum cost path is this.
95.328 - 98.391: The minimum cost is 1 plus 2 plus 2 plus 3 that is 8.
103.26 - 115.704:  this problem has optimal substructure because the path to reach the cell m,n goes through one of the cells either m-1,n-1 or m-1,n or m,n-1.
124.301 - 143.293:  We can recursively write minCost to reach cell m,n as minimum of the minimum cost to reach m-1,n-1, minimum cost to reach m-1,n and minimum cost to reach m,n-1.
144.033 - 149.857: We take the minimum amongst them plus the cost of the destination.
153.308 - 171.416:  code of this recursive knife solution taken from geeksforgeeks.com is we take a function minCost which takes as input the cost matrix and the cell m,n which we want to reach.
172.937 - 175.678: If m and n both are 0 i.e.
175.738 - 181.641: source and destination are same then we just return the cost of m,n.
183.522 - 191.874:  Otherwise, we return cost plus minimum of the possible places from where I can come.
193.909 - 196.892:  if n or m is less than 0, i.e.
197.612 - 202.416: the particular cell is not valid, we return int max.
203.717 - 217.589: This int max helps when the min cost of some path reaching to a particular cell is not valid.
218.83 - 222.013: So we return int max so that path is ignored.
224.656 - 228.719:  time complexity of this naive recursive solution is exponential.
230.16 - 233.202: This can be seen from its recursive tree.
237.816 - 249.7:  as we see that if I call for cell 2,2 it is further broken down to 1,1 1,2 and 2,1 which is further subdivided into subproblems.
250.78 - 258.743: We see that we have overlapping subproblems over here like 1,1 1,1 0,1 0,1 So this problem has overlapping subproblems property.
265.541 - 275.01:  Overall the problem has both optimal substructure and overlapping subproblems property so we decide to solve it using dynamic programming.
276.872 - 277.012: i.e.
277.412 - 281.616: constructing a temporary array tc in bottom-up manner.
284.399 - 286.421: Taking example of this cost matrix
288.692 - 307.288:  If from the start, I want to reach this cell, i.e., m equals to 2, n equals to 2, then I'll make TC matrix of size 3 x 3 i.e., the highest cell would be 2,2.
311.672 - 314.254: So, I construct a TC matrix
316.348 - 320.131:  This is my start cell and I want to reach this cell.
320.872 - 324.095: I need to find the minimum cost to reach the cell 2,2.
327.678 - 336.106: The cell 0,0 of tc equals to cost of 0,0 because here the destination and source are same.
338.228 - 346.634:  Now to reach any cell in the bottom most row, there is only one way of moving that is in right direction.
347.915 - 353.299: So to reach the cell 0,1 the cost will be 1 plus 2 that is 3.
354.16 - 358.323: To reach the cell 0,2 the cost will be 3 plus 3 that is 6.
359.524 - 363.247: Similarly to reach any cell in the left most
364.795 - 368.703:  column, there is only one way of moving from cell 0,0 i.e.
368.723 - 369.284: upwards direction.
373.806 - 385.993:  So to reach the cell 1,0 cost is 1 plus 4 that is 5 and to reach the cell 2,0 there is only one way that is 5 plus 1, 6.
388.234 - 397.899: Now to fill rest of the cell I loop from i equals to 1 till less than equals to 2 and j equals to 1 till less than equals to 2.
401.181 - 402.582: To reach this cell
405.302 - 409.565:  To reach this cell, I'll come from either of these cells.
410.786 - 421.275: I take the minimum of these, that is 1, and add this cell's cost to the minimum cost among these.
421.855 - 424.457: So, to reach this cell, the cost will be 9.
426.368 - 431.633:  Now, to reach this cell, I'll come from either of these 3 cells.
432.174 - 433.155: Minimum of these is 3.
434.136 - 435.897: I add 2 to it.
436.298 - 438.58: The cost to reach this cell would be 5.
440.822 - 444.706: To reach this cell, I'll come from either of these 3 cells.
446.417 - 450.56:  the cost to reach this cell would be 5 plus 5 that is 10.
451.781 - 458.145: Now, to reach this cell, I'll come from either of these cells, minimum cost amongst them is 5.
459.006 - 463.329: To reach this cell, cost will be 5 plus 3 that is 8.
465.57 - 468.753: So, the cost to reach the cell 2,2 is 8.
469.413 - 470.514: I return this cost.
472.375 - 474.817: Coming on to the code for this problem,
476.331 - 478.712:  This code is taken from geeksforgeeks.com.
480.333 - 490.539: I construct a tc array of size row, column and initialize 0,0 cell as the same as cost.
491.84 - 500.504: Now, I fill the bottom most row with tc i-1,0 plus cost i0.
501.265 - 504.927: Similarly, I fill the left most column like this.
506.115 - 529.264:  Now, I loop from i equals to 1 till less than equals to m and j equals to 1 from less than equals to n and tcij is given by minimum of these three, the diagonally lower cell, the bottom cell or the left cell plus the cost of that particular cell.
530.205 - 533.566: At last, I return tc of mn.
535.908 - 551.312:  Finding the time complexity for this code, this loop takes O of m time, this loop takes O of n time and this nested loop takes O of m into n time.
551.752 - 565.315: So overall the time complexity for this problem is O of m into n. And the space complexity is also O of m into n because I construct another array.
567.685 - 568.606:  of the same size.
570.788 - 571.749: Thank you for watching!
572.15 - 574.072: Please leave us your likes and comments.


The content from the lecture slides:
Page1: The slide presents a C program code snippet demonstrating the declaration and definition of a function `print` that takes an array as argument, made to highlight the concept that function parameters declared as arrays are treated as pointers in C. The `print` function prints the value, address, and sizes of the array and its elements. It's noted that `sizeof` on the function parameter `ptr` will return the size of `int *` and not the array size. A visual diagram illustrates the array `arr[5]` and its address in the stack, the value being pointed by the pointer `ptr`, and the relationship between the addresses inside the `print` function and the `main` function.

Page2: This slide contains a C program example that demonstrates the difference in the perceived size of an array when passed to a function. It shows that the array size calculation within the function, using `sizeof(arr)/sizeof(arr[0])`, will yield an incorrect size as the array is treated as a pointer within the function context. The example outputs the sizes of the array from both inside the `main` function and the `print` function, highlighting the discrepancy between the two.

Page3: Similar to the previous page, this slide includes C code that prints the same information, but with the size of the array directly passed to the `print` function. It emphasizes that while the array appears to have the correct size within the `main` function, the size within the `print` function must be passed explicitly since the array parameter is treated as a pointer.

Page4: The slide outlines the final decision that in C programming language, array parameters are treated as pointers to avoid the inefficiency of copying array data in terms of memory and time. It states that since the usual intent is to work with the original array rather than a copy, all array parameters are treated as pointers.

Page5: There is a slide with a title that reads, "Why C treats array parameters as pointers."

Page6: This slide reinforces the final decision that array parameters in C are treated as pointers to enhance performance and efficiency, and it summarizes the conclusion from the preceding slides.

Page7: An ending slide thanks the viewers for watching the presentation and invites them to leave comments.
Some prerequisite ...
//C program
#include <stdio.h>
void print (int ptr []);
void print (int ptr [])
{
printf ("The value of ptr inside print function is: %d\n",ptr);
printf("The address of ptr inside print function is: %d\n", &ptr);
printf ("The size of ptr will be: %d\n", sizeof (ptr));
printf("The size of ptr [0] will be: %d\n",sizeof (ptr [0]));
}
int main()
}
int arr [5] = {1,2,3,4,5);
printf ("The value of arr inside main function is: %d\n", arr);
printf("The address of arr inside main function is: %d\n", &arr);
print (arr);
print(int ptr[]) and print(int *ptr) are same
ptr[0] → *ptr → *(100) ⇒1
sizeof(1) →4
ptr[i] →*(ptr+i)
Arr[0] Arr[1] Arr[2] Arr[3] Arr[4]
=1
=2
=3
=4
=5
100
104 108
112
116
Int ptr[]→int *ptr
Printf(&ptr)→→700
Printf(sizeof(ptr))→→
Printf(sizeof(ptr[0]))
8
➜4
Int arr[5] = {1,2,3,4,5}
Printf(arr)
Printf(&arr)
Print(arr) → print (100)
Inside print()
function
Stack memory
Inside Main()
function
Ptr = 100
700Example ...
// C program to demonstrate pointer to pointer
#include <stdio.h>
#include <stdlib.h>
void print (int arr[]);
void print (int arr [])
{
int size= (sizeof (arr) /sizeof (arr [0]));
printf("The size of array inside the print function is: %d\n", size);
for (int i=0;i<size; i++)
{
}
printf("%d\n", arr[i]);
}
int main()
{
int arr [5] = {1,2,3,4,5);
int size= (sizeof (arr) /sizeof (arr [0]));
printf ("The size of array inside the main function is: %d\n",size);
print (arr);
Output:
5
75
2
1
ΝΕ
2Example ...
// C program
#include <stdio.h>
#include <stdlib.h>
void print (int arr []);
void print (int arr [], int size)
{
printf("The size of array inside the called function is: %d\n", size);
for (int i=0;i<size;i++)
{
}
printf("%d\n", arr[i]);
}
int main()
{
int arr [5] = {1,2,3,4,5);
int size= (sizeof (arr) /sizeof (arr [0]));
printf ("The size of array inside the main function is: %d\n", size);
print (arr, size);
Output:
55
123
4
5Final decision:
In C programming language, array parameters are treated as pointers. Because it is
inefficient to copy the array data in terms of both memory and time and most of the
times, when we pass an array our intention is to just tell the array we interested in, not to
create a copy of the array.
Hence all the array parameters are treated as pointers.1
File
AutoSave Off HE
5
From From Present Custom Slide
Beginning Current Slide Online- Show-
Start Slide Show
2
3
5
6
Home Insert Design Transitions Animations Slide Show Review
DG
Slide 1 of 6
03
Why C treats
array parameters
as pointers
1..
Thank you for watching!
f.
Set Up
Slide Show
Hide
Slide
Click to add notes
Pointers_Basic - Saved to this PC
Rehearse Record Slide
Timings Show -
Set Up
Ĥ e re
Picture Tools
View Help Storyboarding Format
Play Narrations
Use Timings
Show Media Controls
DG
Monitor: Automatic
Use Presenter View
Monitors
Tell me what you want to do
Why C treats
array parameters
as pointers
Notes
Vishal Gulia
DI
88
Share
(4¹))
Comments
«»
+76% 3
3:30 PM
3/7/20191
File
AutoSave Off HE
5
From From Present Custom Slide
Beginning Current Slide Online- Show-
Start Slide Show
2
3
5
6
Home Insert Design Transitions Animations Slide Show
DG
Slide 5 of 6
03
Why C treats
array parameters
as pointers
Thank you for watching!
Set Up
Slide Show
Hide Rehearse Record Slide
Slide Timings Show-
Set Up
Click to add notes
Review View Help
✔Play Narrations
Use Timings
Show Media Controls
e се
Pointers Basic - Saved to this PC
Picture Tools
Storyboarding
N] /
Monitor: Automatic
Use Presenter View
Monitors
Tell me what you want to do
Final decision:
In C programming language, array parameters are treated as pointers. Because it is
inefficient to copy the array data in terms of both memory and time and most of the
times, when we pass an array our intention is to just tell the array we interested in, not to
create a copy of the array.
Hence all the array parameters are treated as pointers.
Notes
DI
88
Vishal Gulia
HO
Share
Comments
«»
+ 76% 53
3:30 PM
3/7/2019From
Beginning Current Slide Online
1
AutoSave Off H20 PE
File Home Insert Design Transitions Animations Slide Show
CUsers\vgulia\Documents personal documents\C Pointers basic.cpp-Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
DHUSGANG >60% 03:24
Use Timings
binie Show Slide Timings: Show
basic.cpp X
Show Media Controls
2
4
5
6
L
2
B
4
5
ƏG 6
Slide 5 of 6
7 B
//C program
#include <stdio.h>
void print (int ptx []);
atay p
void print (int ptr [])
15 B(
Show
int main()
C++ source file
Review View Help
Play Narrations
Click to add notes
Final decision
d\n ,ptr);
еге
Pointers Basic - Saved to this PC
printf(The value of ptr inside print function is:
printf("The address of ptr inside print function
printf("The size of ptr will be: sizeof(ptrtoming language, array parameters are treated as pointers. Because it is
printf(The size of ptx [0] will be:
is: %d\n", sptr);
Storyboarding
Tell me what you want to do
Monitor: Automatic
ABC
Presenter View
int arr [5] = {1,2,3,4,5);
printf("The value of arr inside main function is: d\n", arr);
printf(The address of arz inside main functience all the army parameters are treated as pointers.
print (arr);
inefficient to copy the array data in terms of both memory and time and most of the
times, when we pass an array our intention is to just tell the array we interested in, not to
create a copy of the array.
O
length: 560 lines:21
Ln:8 Col:30 Sel:010
Vishal Gulia
Windows (CRLF)
Share
UTF-8
Comments
INS
3/7/2019
23C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
OPE
gpu_info.py gpu_info.txt basic.cpp basic1.cpp basic2.cpp
1
2 //C program
3
4
5
6 void print (int ptr [])
7
B{
8
9
#include <stdio.h>
void print (int ptr []);
HULLAAN 2
10
11
12
13 }
14 int main()
15 (
16
17
18
19
20
21
printf("The value of ptr inside print function is: %d\n",ptr);
printf("The address of ptr inside print function is: %d\n", sptr);
printf("The size of ptr will be: %d\n", sizeof (ptr));
printf ("The size of ptr [0] will be: %d\n",sizeof (ptr [0]));
SC++ source file
int arr [5]
{1,2,3,4,5);
printf("The value of arr inside main function is: ed\n", arr):
printf("The address of arr inside main function is: %d\n", sarr);
print (arr);
||
e
e
N]:/
ABC
length: 560 lines: 21
Ln:8 Col:30 Sel: 010
Windows (CRLF)
UTF-8
I
3:31 PM
3/7/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
|pc|
gpu_info.py gpu_info.bxtbasic.cpp basic1.cpp basic2.cpp X
1
2 //C program
3 #include <stdio.h>
4 void print (int ptr []);
5
6
7
8
9
10
12
13
}
14 int main()
56
15 B{
16
17
18
19
22
void print (int ptr [])
B1
20 }
21
printf ("The value of ptr inside print function is: %d\n",ptr);
printf("The address of ptr inside print function is: %d\n", sptr);
printf("The size of ptr will be: %d\n",sizeof (ptr));
printf ("The size of ptr [0] will be: %d\n", sizeof (ptr [0]));
C++ source file
int arr [5] = {1,2,3,4,5);
printf("The value of arr inside main function is: %d\n", arr);
printf ("The address of arr inside main function is: %d\n", &arr);
print (arr);
e
есее
N] /
O
length: 560 lines: 21
Ln: 8 Col: 30 Sel: 010
Windows (CRLF)
UTF-8
3:31 PM
3/7/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
UPC
gpu_info.py X gpu_info.txt basic.cpp basic1.cpp X
1
TT
2 //C program
23
9
10
11
4
HTTLE
567668
12
34567
722
13 }
15
16
14 int main()
B{
17
18
19
#include <stdio.h>
void print (int ptr []);
void print (int ptr [])
B(
20
21
}
printf ("The value of ptr inside pr:
printf("The address of ptr inside
printf("The size of ptr will be: 8
printf ("The size of ptr [0] will be
C++ source file
int arr [5]
printf ("The
{1,2,3,4,5);
value of arr inside ma:
printf("The address of arr inside :
print (arr);
e
C:\WINDOWS\system32\cmd.exe
straof (ptx(1)):
014
C:\WINDOWS\system32\cmd.exe GC:\WINDOWS\system32\c... X
N
ABC
A
length: 560 lines: 21
CIN
Ln:21 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
3:31 PM
3/7/2019
INS
XC\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Froding Language Settings Tools Macro Run Plugins Window ?
23966040PC
15
Bepuliato py
Vista / prograws 10 Tips
3
#include <stdio.h>
4 void print (int ptr []);
5
6
A===N
void print (int ptr [])
B(
printf(The value of ptr inside pr
printf ("The address of ptr inside
printf("The size of ptr will be: 8
11 the printf("The size of ptr will be
12
13 }
14 int main()
15 E
16
20 }
2 kegydie an
Google Chrome
ITSD
IT Service Desk
C++ source file
int arr [5] = {1,2,3,4,5);
printf(The value of arr inside ma
printe The address of arr inside!
print (arr);
basic.cpp X
Notepad+
putty
sic1.cpp X C:\WINDOWS\system32\cmd.exe
e
e
ве
N]
I
1
O
ABC
length: 560 lines: 21
011_
Ln: 21 Col: 1 Sel: 010
Windows (CRLF)
TF-8 COM INS
3:31 PM
3/7/2019
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
OUC
gpu_info.py X gpu_info.txt basic.cpp X
LT
1
2
3
10
4567890
LLLLENN
11
12
34567
//C program
#include <stdio.h>
void print (int ptr []);
13 }
void print (int ptr [])
16
B(
17
18
19
14 int main()
15 {
20 }
21
C++ source file
basic1.cpp X
C:\WINDOWS\system32\cmd.exe
printf ("The value of ptr inside print function is: %d\n",ptr);
printf("The address of ptr inside int function is: 3d\n", sptr);
\n", sizeof (ptr));
printf("The size of ptr will be:
printf ("The size of ptr [0] will be d\n", sizeof (ptr [0]));
e
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
int arr [5]
{1,2,3,4,5);
printf ("The value of arr inside main function is: (d\n", arr);
printf ("The address of arr inside in function is ad\n", sarr);
print (arr);
еге
I
N] 1
O
length: 560 lines: 21
Ln: 21 Col: 1 Sel: 010
I
Windows (CRLF) UTF-8
I
3:31 PM
3/7/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
OUC
gpu_info.py X gpu_info.txt basic.cpp X basic1.cpp basic2 C:\WINDOWS\system32\cmd.exe
1
2
23
4567890
TELLONNEN
7 (
4567W
10
11
12
13 }
14 int main()
//C program
#include <stdio.h>
void print (int ptr []);
16
void print (int ptr [])
15 B{
17
18
19
20
21
}
C++ source file
printf ("The value of ptr inside print fund void print (int ptr [])
printf("The address of ptr inside print fu
Str);
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print (int*)':
basic.cpp:10:54: warning: 'sizeof' on array function parameter 'ptr' will return size of 'int' [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n", sizeof(ptr));
basic.cpp:6:20: note: declared here
e
printf("The size of ptr will be: %d\n",sizeof (ptr));
printf("The size of ptr [0] will be: %d\n" C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
The size of ptr will be: 8
int arr [5] = {1,2,3,4,5);
printf("The value of arr inside main func The size of ptr[0] will be: 4
printf ("The address of arr inside main fun
print (arr);
ABC
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
ees
N
O
length:560 lines: 21
Ln:21 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
I
3:31 PM
3/7/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
OUC
gpu_info.py X gpu_info.txt basic.cpp X basic1.cpp basic2.cpp
1
2
23
4567890
TELLONNEN
7 (
4567W
//C program
#include <stdio.h>
void print (int ptr []);
10
11
12
13 }
14 int main()
16
void print (int ptr [])
15 B{
17
18
19
20
21
}
C++ source file
C:\WINDOWS\system32\cmd.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print (int*)':
basic.cpp:10:54: warning: 'sizeof' on array function parameter 'ptr' will return size of 'int** [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n", sizeof(ptr));
printf ("The value of ptr inside print function void print(int ptr[])
e
basic.cpp:6:20: note: declared here
printf("The address of ptr inside print functiptr/
printf("The size of ptr will be: %d\n", sizeof (ptr));
printf ("The size of ptr [0] will be: %d\n", sizec:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
The size of ptr will be: 8
int arr [5] = {1,2,3,4,5);
printf("The value of arr inside main function The size of ptr [0] will be: 4
printf ("The address of arr inside main function
print (arr);
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
ees
N
O
length: 560 lines: 21
Ln:21 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
3:31 PM
3/7/2019
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
OUC
gpu_info.py X gpu_info.txt basic.cpp X
1
2
23
4
5
6
7
8
9
10
11
12
TELLONNEN
34567
13 }
//C program
#include <stdio.h>
void print (int ptr []);
16
void print (int ptr [])
(
14 int main()
15 B{
17
18
19
20
21
}
C++ source file
basic1.cpp basic2.cpp
e
C:\WINDOWS\system32\cmd.exe
printf ("The value of ptr inside print function is void print(int ptr[])
printf("The address of ptr inside print function
sptx)";
printf("The size of ptr will be: %d\n",sizeof (ptr
printf ("The size of ptr [0] will be: %d\n", sizeof
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print (int*)':
basic.cpp:10:54: warning: 'sizeof' on array function parameter 'ptr' will return size of 'int*' [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n", sizeof(ptr));
basic.cpp:6:20: note: declared here
ees
(C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
int arr [5] = {1,2,3,4,5);
printf ("The value of arr inside main function is: The size of ptr [0] will be: 4
printf ("The address of arr inside main function i
print (arr);
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
The size of ptr will be: 8
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
N
O
length: 560 lines: 21
Ln:21 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
3:31 PM
3/7/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
OUC
gpu_info.py X gpu_info.txt basic.cpp X basic1.cpp basic2.cpp
1
2
23
4
5
6
7
8
9
10
11
12
TELLONNEN
13
34567
16
//C program
#include <stdio.h>
void print (int ptr []);
15 B{
17
18
19
void print (int ptr [])
(
}
14 int main()
20
21
}
C++ source file
printf ("The value of ptr inside print function is: dvoid print(int ptr[])
ptx),
C:\WINDOWS\system32\cmd.exe
e
ABC
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print (int*)':
basic.cpp:10:54: warning: 'sizeof' on array function parameter 'ptr' will return size of 'int** [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n",sizeof(ptr));
printf("The address of ptr inside print function is:
printf ("The size of ptr will be: %d\n", sizeof (ptr));
printf ("The size of ptr [0] will be: %d\n", sizeof (ptr [C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
ees
basic.cpp:6:20: note: declared here
int arr [5] = {1,2,3,4,5);
printf("The value of arr inside main function is: %d\nThe size of ptr [0] will be: 4
printf("The address of arr inside main function is: d
print (arr);
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
The size of ptr will be: 8
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
N
O
length: 560 lines: 21
Ln:21 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
3:31 PM
3/7/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
OUC
gpu_info.py X gpu_info.txt basic.cpp X basic1.cpp basic2.cpp
1
2
23
4
5
6
7
8
9
10
11
12
TELLONNEN
34567
13 }
15
//C program
#include <stdio.h>
void print (int ptr []);
16
void print (int ptr [])
(
14 int main()
B{
17
18
19
20 }
21
C++ source file
printf("The value of ptr inside print function is: %d\n",pt void print(int ptr [])
printf("The address of ptr inside print function is: %d\n",ptr);
printf("The size of ptr will be: %d\n", sizeof (ptr));
printf ("The size of ptr [0] will be: %d\n",sizeof (ptr [0]));
e
ees
C:\WINDOWS\system32\cmd.exe
C:\Users\vgulia\Documents\personal documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print(int*)':
basic.cpp:10:54: warning: 'sizeof' on array function parameter 'ptr' will return size of 'int*' [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n",sizeof(ptr));
ABC
basic.cpp:6:20: note: declared here
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
The value of arr inside main function is: 6422064
int arr [5] = {1,2,3,4,5);
printf ("The value of arr inside main function is: %d\n", arr The size of ptr [0] will be: 4
printf("The address of arr inside main function is: %d\n",).
print (arr);
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
The size of ptr will be: 8
N
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
O
length: 560 lines: 21
Ln:21 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
3:31 PM
3/7/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
OUC
gpu_info.py X gpu_info.txt basic.cpp X basic1.cpp basic2.cpp
1
2
23
4
5
6
7
8
9
10
11
12
TELLONNEN
34567
13 }
//C program
#include <stdio.h>
void print (int ptr []);
void print (int ptr [])
(
16
14 int main()
15 B{
17
18
19
20 }
21
C++ source file
printf ("The value of ptr inside print function is: %d\n",ptr)
printf("The address of ptr inside print function is: %d\n", &ptr);
printf("The size of ptr will be: %d\n", sizeof (ptr));
printf ("The size of ptr [0] will be: %d\n",sizeof (ptr [0]));
e
ees
C:\WINDOWS\system32\cmd.exe
N
ABC
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print (int*)':
basic.cpp:10:54: warning: 'sizeof' on array function parameter 'ptr' will return size of 'int' [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n",sizeof(ptr));
basic.cpp:6:20: note: declared here
void print(int ptr[])
int arr [5]
{1,2,3,4,5);
printf ("The value of arr inside main function is: %d\n", arr);
printf ("The address of arr inside main function is: %d\n", sarc:\Users\vgulia\Documents\personal_documents\C_Pointers>
print (arr);
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
The size of ptr will be: 8
The size of ptr [0] will be: 4
O
length: 560 lines: 21
Ln:21 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
3:31 PM
3/7/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
OUC
gpu_info.py X gpu_info.txt basic.cpp X basic1.cpp basic2.cpp
1
2
23
TELLONNEN
4
5
6
7
8
9
10
11
12
13 }
14 int main()
4567W
16
//C program
#include <stdio.h>
void print (int ptr []);
15 B{
17
18
19
20
21
void print (int ptr [])
(
}
C++ source file
printf("The value of ptr inside print function is: %d\n",ptr);
printf("The address of ptr inside print function is: %d\n", sptr);
printf("The size of ptr will be: %d\n", sizeof (ptr));
printf ("The size of ptr [0] will be: %d\n", sizeof (ptr [0]));
int arr [5] = {1,2,3,4,5);
printf ("The value of arr inside main function is: %d\n", arr);
printf("The address of arr inside main function is: %d\n", sarr);
print (arr);
e
ees
N
C:\WINDOWS\system32\cmd.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print (int*)':
basic.cpp:10:54: warning: 'sizeof on array function parameter 'ptr' will return size of 'int' [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n", sizeof(ptr));
basic.cpp:6:20: note: declared here
void print(int ptr[])
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
The size of ptr will be: 8
The size of ptr [0] will be: 4
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
O
length: 560 lines: 21
Ln:21 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
3:31 PM
3/7/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
OUC
gpu_info.py X gpu_info.txt basic.cpp X basic1.cpp basic2.cpp
1
2
23
TELLONNEN
4
5
6
7
8
9
10
11
12
13 }
14 int main()
4567W
16
//C program
#include <stdio.h>
void print (int ptr []);
15 B{
17
18
19
20
21
void print (int ptr [])
(
}
C++ source file
printf("The value of ptr inside print function is: %d\n",ptr);
printf("The address of ptr inside print function is: %d\n", sptr);
printf("The size of ptr will be: %d\n", sizeof (ptr));
printf ("The size of ptr [0] will be: %d\n", sizeof (ptr [0]));
int arr [5] = {1,2,3,4,5);
printf ("The value of arr inside main function is: %d\n", arr);
printf("The address of arr inside main function is: %d\n", sarr);
print (arr);
e
ees
N
C:\WINDOWS\system32\cmd.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print (int*)':
basic.cpp:10:54: warning: 'sizeof' on array function parameter 'ptr' will return size of 'int*' [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n",sizeof(ptr));
basic.cpp:6:20: note: declared here
void print(int ptr [])
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
The size of ptr will be: 8
The size of ptr [0] will be: 4
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
O
length: 560 lines: 21
Ln:21 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
3:31 PM
3/7/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
OUC
gpu_info.py X gpu_info.txt basic.cpp X basic1.cpp basic2.cpp
1
2
23
TELLONNEN
4
5
6
7
8
9
10
11
12
13 }
14 int main()
4567W
16
//C program
#include <stdio.h>
void print (int ptr []);
15 B{
17
18
19
20
21
void print (int ptr [])
(
}
C++ source file
printf("The value of ptr inside print function is: %d\n",ptr);
printf("The address of ptr inside print function is: %d\n", sptr);
printf("The size of ptr will be: %d\n", sizeof (ptr));
printf ("The size of ptr [0] will be: %d\n", sizeof (ptr [0]));
int arr [5] = {1,2,3,4,5);
printf ("The value of arr inside main function is: %d\n", arr);
printf("The address of arr inside main function is: %d\n", sarr);
print (arr);
e
ees
N
C:\WINDOWS\system32\cmd.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print (int*)':
basic.cpp:10:54: warning: 'sizeof' on array function parameter 'ptr' will return size of 'int' [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n",sizeof(ptr));
basic.cpp:6:20: note: declared here
void print(int ptr[])
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
The size of ptr will be: 8
The size of ptr[0] will be: 4
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
O
length: 560 lines: 21
Ln: 21 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
3:31 PM
3/7/2019
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
OUC
gpu_info.py X gpu_info.txt basic.cpp X basic1.cpp basic2.cpp
1
2
23
4
5
6
7
8
9
10
11
12
TELLONNEN
34567
13 }
15
16
//C program
#include <stdio.h>
void print (int ptr []);
14 int main()
B{
17
18
19
void print (int ptr [])
(
20
21
}
printf("The value of ptr inside print function is: %d\n",ptr);
printf("The address of ptr inside print function is: %d\n", sptr);
printf("The size of ptr will be: %d\n", sizeof (ptr));
printf ("The size of ptr [0] will be: %d\n", sizeof (ptr [0]));
C++ source file
int arr [5] = {1,2,3,4,5);
printf ("The value of arr inside main function is: %d\n", arr);
printf("The address of arr inside main function is: %d\n", sarr);
print (arr);
e
ees
N
C:\WINDOWS\system32\cmd.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print (int*)':
basic.cpp:10:54: warning: 'sizeof' on array function parameter 'ptr' will return size of 'int' [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n", sizeof(ptr));
basic.cpp:6:20: note: declared here
void print(int ptr[])
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
The size of ptr will be: 8
The size of ptr [0] will be: 4
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
O
length: 560 lines: 21
Ln:21 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
3:31 PM
3/7/2019
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
OUC
gpu_info.py X gpu_info.txt basic.cpp X basic1.cpp basic2.cpp
1
2
23
TELLONNEN
4
5
6
7
8
9
10
11
12
13 }
14 int main()
4567W
16
//C program
#include <stdio.h>
void print (int ptr []);
15 B{
17
18
19
20
21
void print (int ptr [])
(
}
C++ source file
printf("The value of ptr inside print function is: %d\n",ptr);
printf("The address of ptr inside print function is: %d\n", sptr);
printf("The size of ptr will be: %d\n", sizeof (ptr));
printf ("The size of ptr [0] will be: %d\n", sizeof (ptr [0]));
int arr [5] = {1,2,3,4,5);
printf ("The value of arr inside main function is: %d\n", arr);
printf("The address of arr inside main function is: %d\n", sarr);
print (arr);
e
ees
N
C:\WINDOWS\system32\cmd.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print(int*)':
basic.cpp:10:54: warning: 'sizeof' on array function parameter 'ptr' will return size of 'int*' [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n",sizeof(ptr));
basic.cpp:6:20: note: declared here
void print(int ptr[])
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
The size of ptr will be: 8
The size of ptr [0] will be: 4
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
O
length: 560 lines: 21
Ln:21 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
3:31 PM
3/7/2019
INSC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
OUC
gpu_info.py X gpu_info.txt basic.cpp X basic1.cpp basic2.cpp
1
2
23
TELLONNEN
4
5
6
7
8
9
10
11
12
13 }
14 int main()
4567W
16
//C program
#include <stdio.h>
void print (int ptr []);
15 B{
17
18
19
20
21
void print (int ptr [])
(
}
C++ source file
printf ("The value of ptr inside print function is: ad\n",ptr);
printf("The address of ptr inside print function is: %d\n", sptr);
printf("The size of ptr will be: %d\n", sizeof (ptr));
printf ("The size of ptr [0] will be: %d\n", sizeof (ptr [0]));
int arr [5] = {1,2,3,4,5);
printf ("The value of arr inside main function is: %d\n", arr);
printf("The address of arr inside main function is: %d\n", sarr);
print (arr);
e
ees
N
C:\WINDOWS\system32\cmd.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print(int*)':
basic.cpp:10:54: warning: 'sizeof' on array function parameter 'ptr' will return size of 'int*' [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n",sizeof(ptr));
basic.cpp:6:20: note: declared here
void print(int ptr[])
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
The size of ptr will be: 8
The size of ptr [0] will be: 4
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
O
length: 560 lines: 21
Ln:21 Col: 1 Sel: 010
Windows (CRLF)
I
UTF-8
3:31 PM
3/7/2019
INSC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
Opc
gpu_info.py X gpu_info.txt X basic.cpp basic1ppbasic2.cpp
1
2 //c program
HT
23
4567890
10
11
LILLENN
7 B(
12
34567
#include <stdio.h>
void print (int ptr []);
13 }
void print (int ptr [])
16
14 int main()
15 B{
17
18
19
20 }
21
printf("The value of ptr inside print function is: %d\n",ptr);
printf("The address of ptr inside print function is: %d\n", aptr);
printf ("The size of ptr will be: %d\n", sizeof (ptr));
printf("The size of ptr [0] will be: ed\n",sizeof (ptr [0]));
C++ source file
int arr [5] = {1,2,3,4,5);
printf ("The value of arr inside main function is: %d\n", arr);
printf("The address of arr inside main function is: ed\n", sarr);
print (arr);
e
вене
N] 1
O
ABC
length: 526 lines: 21
Ln: 21 Col:2 Sel: 010
Windows (CRLF)
UTF-8
3:32 PM
3/7/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic1.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
*504|
gpu_info.py X gpu_info.txt X basic.cpp X basic1.cpp basic2.cpp
// C program to demonstrate pointer to pointer
#include <stdio.h>
#include <stdlib.h>
void print (int arr []);
1
2
23
4567890
10
11 B
12
TILTA
7 B(
13
34567
727
14 }
15
void print (int arr[])
17
18
19
20
21
16 8(
int main()
C++ source file
int arr [5] = {1,2,3,4,5);
int size= (sizeof (arr) /sizeof (arr [0]));
printf("The size of array inside the main function is: %d\n", size);
print (arr);
int size= (sizeof (arr) /sizeof (arr [0]));
printf ("The size of array inside the print function is: %d\n", size); C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
for (int i=0;i<size; i++)
(
printf("%d\n", arr[i]);
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
The size of ptr will be: 8
The size of ptr [0] will be: 4
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
e
ees
ON C:\WINDOWS\system32\cmd.exe
N
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print (int*)':
basic.cpp:10:54: warning: 'sizeof' on array function parameter 'ptr' will return size of 'int*' [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n", sizeof(ptr));
basic.cpp:6:20: note: declared here
void print(int ptr[])
I
O
length: 526 lines: 21
Ln: 14 Col:2 Sel: 010
Windows (CRLF)
I
UTF-8
3:32 PM
3/7/2019
INSC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic2.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
OPC
gpu_info.py gpu_info.txt X basic.cpp X basic1.cpp basic2.cpp X
1 // C program to demonstrate pointer to pointer
2 #include <stdio.h>
#include <stdlib.h>
void print (int arr []);
23
TUTTA
3
4567890
10
11 B
12
13
7 B1
void print (int arr[], int size)
14 ·}
15
16 B(
17
18
19
20
21
22
printf("The size of array inside the print function is: %d\n", size);
for (int i=0;i<size; i++)
{
printf("%d\n", arr[i]);
C++ source file
}
int main()
int arr [5] = {1,2,3,4,5);
int size= (sizeof (arr) /sizeof (arr [0]));
printf ("The size of array inside the main function is: %d\n", size);
print (arr, size);
ене
N
1
O
length: 503 lines: 22
Ln: 20 Col:22 Sel: 010
Windows (CRLF)
UTF-8
3:32 PM
3/7/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic2.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
04
gpu_info.py X gpu_info.txt X basic.cpp basic1.cpp basic2.cpp X
1 // C program to demonstrate pointer to pointer
2 #include <stdio.h>
#include <stdlib.h>
void print (int arr []);
23
3
TELE
4567&son
8
9
10
11 B
12
13
199
void print (int arr[], int size)
B(
16
}
15 int main()
B(
17
18
19
20
21
22
C++ source file
}
printf("The size of array inside the print function is: %d\n", size); C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
for (int i=0;i<size; i++)
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
printf("%d\n", arr[i]);
The size of ptr will be: 8
The size of ptr [0] will be: 4
e
Ĥ é res
C:\WINDOWS\system32\cmd.exe
C:\Users\vgulia \Documents\personal documents\C_Pointers>g++ basic.cpp -o basic
basic.cpp: In function 'void print(int*)':
basic.cpp:10:54: warning: 'sizeof' on array function parameter 'ptr' will return size of 'int*' [-Wsizeof-array-argument]
printf("The size of ptr will be: %d\n", sizeof(ptr));
int arr [5] = {1,2,3,4,5);
int size= (sizeof (arr) /sizeof (arr [0]));
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic1.cpp -o basic1
basic1.cpp: In function 'void print (int*)':
printf("The size of array inside the main function is: %d\n", size); basic1.cpp:8:27: warning: 'sizeof' on array function parameter 'arr' will return size of 'int' [-Wsizeof-array-argument]
print (arr, size);
int size (sizeof(arr)/sizeof(arr[0]));
N 1
basic.cpp:6:20: note: declared here
void print(int ptr[])
A
basic1.cpp:6:20: note: declared here
void print(int arr[])
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic1.exe
The size of array inside the main function is: 5
The size of array inside the print function is: 2
1
2
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
I
O
length: 503 lines: 22
Ln: 11 Col:6 Sel: 010
Windows (CRLF)
UTF-8
3:32 PM
3/7/2019
INSC:\Users\vgulia\Documents personal_documents\C_Pointers\basic2.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
4504
gpu_info.py X gpu_info.txt basic.cpp basic1.cpp basic2.cpp X
1 // C program to demonstrate pointer to pointer
#include <stdio.h>
#include <stdlib.h>
23
TIENDA
2
456789OHNMS7
10
7 B(
11 B
12
13
void print (int arr []);
16
void print (int arr[], int size)
17
18
19
20
21
22
}
15 int main()
B
C++ source file
}
printf("The size of array inside the print function is: %d\n", size); The size of ptr will be: 8
for (int i=0;i<size; i++)
The size of ptr [0] will be: 4
printf("%d\n", arr[i]);
int arr [5] = {1,2,3,4,5);
int size= (sizeof (arr) /sizeof (arr [0]));
printf ("The size of array inside the main function is: %d\n", size);
print (arr, size);
e
Ĥ é ▸ é Ⓡ
N
1
basic.cpp:6:20: note: declared here
void print(int ptr[])
C:\WINDOWS\system32\cmd.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
The value of arr inside main function is: 6422064
The address of arr inside main function is: 6422064
The value of ptr inside print function is: 6422064
The address of ptr inside print function is: 6422032
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic1.cpp -o basic1
basic1.cpp: In function 'void print (int*)':
basic1.cpp:8:27: warning: 'sizeof' on array function parameter 'arr' will return size of 'int' [-Wsizeof-array-argument]
int size= (sizeof(arr)/sizeof(arr[0]));
basic1.cpp:6:20: note: declared here
void print(int arr[])
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic1.exe
The size of array inside the main function is: 5
The size of array inside the print function is: 2
1
2
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic2.cpp -o basic2
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic2.exe
The size of array inside the main function is: 5
The size of array inside the print function is: 5
1
2
3
4
5
C:\Users\vgulia\Documents\personal_documents\C_Pointers>_
I
length: 503 lines: 22
Ln: 11 Col:6 Sel: 010
Windows (CRLF)
I
UTF-8
3:33 PM
3/7/2019
INSFile
1
From From Present Custom Slide
Beginning Current Slide Online- Show-
Start Slide Show
2
3
4
AutoSave Off HE
5
6
Home Insert Design Transitions Animations Slide Show
96
Slide 5 of 6
Why C treats
amay parameters
as pointers
1.1
Thank you for watching!
Set Up
Slide Show
Click to add notes
e
Review
Hide Rehearse Record Slide
Slide Timings Show-
Set Up
View Help
Play Narrations
Use Timings
Show Media Controls
Pointers Basic - Saved to this PC
N]:/
Storyboarding
Tell me what you want to do
Monitor: Automatic
Use Presenter View
Monitors
Final decision:
In C programming language, array parameters are treated as pointers. Because it is
inefficient to copy the array data in terms of both memory and time and most of the
times, when we pass an array our intention is to just tell the array we interested in, not to
create a copy of the array.
Hence all the array parameters are treated as pointers.
Notes
DI
88
Vishal Gulia
Share
Comments
«»
+76% 53
3:34 PM
3/7/2019File
AutoSave Off 8 2-0 E
2
From From Present Custom Slide
Beginning Current Slide Online- Show-
3
5
6
Home Insert Design Transitions Animations Slide Show Review
DU
Slide 6 of 6
Start Slide Show
a portion
OG Thank you for watching!
15
Set Up
Slide Show
Hide Rehearse Record Slide
Slide Timings Show-
Set Up
Click to add notes
e
View Help
Play Narrations
Use Timings
Show Media Controls
Pointers Basic - Saved to this PC
N]:/
Storyboarding
Tell me what you want to do
Monitor: Automatic
Use Presenter View
Monitors
Final decision:
In C programming language, array parameters are treated as pointers. Because it is
inefficient to copy the array data in terms of both memory and time and most of the
times, when we pass an array our intention is to just tell the array we interested in, not to
create a copy of the array.
Hence all the array parameters are treated as pointers.
+
Notes
DI
88
Vishal Gulia
B
Share
Comments
«»
+76% 53
3:34 PM
3/7/20192
AutoSave Off 8 2-0 E
File
From From Present Custom Slide
Beginning Current Slide Online- Show-
Start Slide Show
3
5
6
Home Insert Design Transitions Animations Slide Show
Slide 6 of 6
DG Thank you for watching!
Set Up
Slide Show
Hide Rehearse Record Slide
Slide Timings Show-
Set Up
Click to add notes
Review
é ▸ é
View Help
Play Narrations
Use Timings
Show Media Controls
Pointers Basic - Saved to this PC
Storyboarding
Tell me what you want to do
Monitor: Automatic
Use Presenter View
DG
Monitors
Thank you for watching!
Please leave us your comments.
+
Notes
DI
88
Vishal Gulia
B
Share
Comments
**
+76% 53
3:34 PM
3/7/2019