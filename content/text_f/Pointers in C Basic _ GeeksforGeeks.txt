Basic Information...
1. In every computer system, there is some fixed
random access memory.
2. To store the addresses, we need pointers in C
programming language.Declaration of a pointer variable...
1. data_type_whose_address_it_will_store/void,
Example:
int *ptr - ptr is a pointer, pointing to an integer means storing the address of an integer variable
void *ptr - ptr is a void pointer, can contain the address of any data type
*name_of_variable
2. For finding the address of any variable in the computer memory, we will use "&" operator.
Example:
Int a = 2, The address of a in memory will be = &a
3. Storing the address of a variable into pointer variable.
Example:
Int *ptr = &a;
4. To fetch the value which is stored at the memory location, which a pointer has, We will use asterisk “*”
operator.Practical view of pointers...
// The output of this program can be different
// in different runs. Note that the program
// prints address of a variable and a variable
// can be assigned different address in different
// runs.
#include <stdio.h>
int main()
{
}
int x;
// Prints address of x
printf("%p", &x);
return 0;
Variable
Address
X
1000Practical view of pointers ...
// C program to demonstrate declaration of
// pointer variables.
#include <stdio.h>
int main()
{
}
int x = 10;
// 1) Since there is * in declaration, ptr
// becomes a pointer varaible (a variable
// that stores address of another variable)
// 2) Since there is int before *, ptr is
// pointer to an integer type variable
int *ptr;
// & operator before x is used to get address
// of x. The address of x is assigned to ptr.
ptr = &x;
return 0;
Variable
Address
♂
x = 10
1000
ptr = 1000
2000Practical view of pointer...(Incrementing of pointers)
// C program to demonstrate use of * for pointers in C
#include <stdio.h>
int main()
{
}
// A normal integer variable
int Var = 10;
// A pointer variable that holds address of var.
int *ptr = &Var;
// This line prints value at address stored in ptr.
// Value stored is value of variable "var"
printf("Value of Var = %d\n", *ptr);
// The output of this line may be different in different
// runs even on same machine.
printf("Address of Var = %p\n", ptr);
// We can also use ptr as 1value (Left hand
// side of assignment)
*ptr = 20; // Value at address is now 20
// This prints 20
printf("After doing *ptr = 20, *ptr is %d\n", *ptr);
return 0;
Var=10->20
1000
ptr = 1000
2000
*ptr will give the value which is
stored at memory location present
at ptr pointer variablePractical view of pointer...
// C++ program to illustrate Pointer Arithmetic
// in C/C++
#include <bits/stdc++.h>
// Driver program
int main()
{
}
// Declare an array
int v[3] = {10, 100, 200};
// Declare pointer variable
int *ptr;
// Assign the address of v[0] to ptr
ptr = v;
for (int i = 0; i < 3; i++)
{
}
printf("Value of *ptr = %d\n", *ptr);
printf("Value of ptr = %p\n\n", ptr);
// Increment pointer ptr by 1
ptr++;
V[0]=10
100
V[1] = 100 V[2] = 200 ptr = 100
1.
2.
104
108
2000
*ptr = 10
ptr++ means, we are incrementing the
address by the size of the data type,
which this ptr is pointing to. So ptr will
become 104, *ptr>100
3. ptr++→ 108, *(ptr)→200AutoSave off E
File Home Insert Design Transitions Animations Slide Show
X Cut
Paste
5
6
7
8
Copy
Format Painter
Clipboard
Slide 7 of 8
OG Thank you for watching!
E
New
Slide -
Layout-
Reset
Section-
Slides
Click to add notes
BIUS AV-Aa- A-
AeD
Font
24 A A A-18-3
Review View Help Storyboarding
// Driver program
int main()
{
}
New Microsoft PowerPoint Presentation - Saved to this PC
Practical view of pointer...
// C++ program to illustrate Pointer Arithmetic
// in C/C++
#include <bits/stdc++.h>
// Declare an array
int v[3] = {10, 100, 200);
// Declare pointer variable
int *ptr;
for (int i
{
=
-
// Assign the address of v[0] to ptr
ptr = v;
0; i < 3; i++)
Tell me what you want to do
Text Direction -
\000
[]Align Text-
ALLG
Convert to SmartArt-
Paragraph
A
printf("Value of *ptr = %d\n", *ptr);
printf("Value of ptr = %p\n\n", ptr);
// Increment pointer ptr by 1
ptr++;
100
Arrange Quick
Styles -
104
Drawing
V[0]=10 V[1] = 100 V[2] = 200 ptr = 100
Shape Fill -
Shape Outline -
Shape Effects -
108
2000
1. *ptr = 10
2. ptr++ means, we are incrementing the
address by the size of the data type,
which this ptr is pointing to. So ptr will
become 104, *ptr→100
3. ptr++→ 108, *(ptr)→200
Notes
Vishal Gulia
O Find
88
Replace
Select -
Editing
Share
Dictate
Voice
4)
Comments
+ 76 %
7:02 PM
3/6/2019
«»AutoSave Off HE
File Home Insert Design Transitions Animations Slide Show Review View Help
X Cut
Layout-
-24-A A A
CORY C:\Users\vgulia\Documents pessonal documents\C_Pointers\basic.cpp - Notepad++
New
For File Edit Search View Encodition Language Settings Tools Macro Run Plugins Window
Clipboard
Paste
5
6
7
8
Slide 7 of 8
DE
basic.cpp
4
5
6
7
13
int main()
{
int x;
C++ source file
slides
// The output of this program can be different
// in different runs. Note that the program
// prints address of a variable and a variPractical view of pointer...
// can be assigned different address in different
// runs.
#include <stdio.h>
// Prints address of x
printf("ap", GX);
Thank you for watching
return 0;
Click to add notes
Foht
Ĥe
So
New Microsoft PowerPoint Presentation - Saved to this PC
Storyboarding
// Driver program
int main()
{
// Declare an array
int v[3] = {10, 100, 200);
//C++ program to illustrate Pointer Arithmetic
// in C/C++
#include <bits/stdc++.h>
// Declare pointer variable
int *ptr;
"Paragraph
for (int i = 0; i < 3; i++)
{
- Text Direction -
[+] Align Text-
// Assign the address of v[0] to ptr
ptr = v;
// Increment pointer ptr by 1
ptr++;
Tell me what you want to do
\\DOO
ALL40G
2\^{}}
Convert to SmartArt-
printf("Value of *ptr = %d\n", *ptr);
printf("Value of ptr = %p\n\n", ptr);
100
1.
2.
V[0]=10 V[1] = 100 V[2] = 200 ptr = 100
Arrange Quick
Styles-
104
length: 325 lines: 17
Drawing
108
Shape Fill-
Shape Outline-
Shape Effects-
*ptr = 10
ptr++ means, we are incrementing the
address by the size of the data type,
which this ptr is pointing to. So ptr will
become 104, *ptr⇒→100
3. ptr++→ 108, *(ptr)→200
Ln: 17 Col: 1 Sel: 010
2000
Notes
Vishal Gulia
O Find
Replace
Select-
Editing
Windows (CRLF)
Share
Dictate
UTF-8
Voice
49)
Comments
7:02PM
3/6/2019
76%C:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
4334
basic.cpp X basic1.cpp basic2.cpp basic3.cpp X
1 // The output of this program can be different
2
// in different runs. Note that the program
3 // prints address of a variable and a variable
5
6 #include <stdio.h>
7
8
9
10
11
LL
// can be assigned different address in different
// runs.
12
13
14
15
16
17
int main()
{
}
C++ source file
int x;
// Prints address of x
printf("%p", &x);
return 0;
e
Ĥer
N/
ABC
length: 325 lines: 17
Ln:17 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
I
7:02 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
OPC
basic.cpp X basic1.cpp X
basic2.cpp basic3 cpp X
1 // The output of this program can be different
2
// in different runs. Note that the program
3
// prints address of a variable and a variable
// can be assigned different address in different
// runs.
#include <stdio.h>
4567BCH23
LLLAAAAH
8
9 B{
10
11
12
13
int main()
14
15
16
17
C++ source file
int x;
// Prints address of x
printf("%p", &x);
return 0;
e
Ae
N]:/
length: 325 lines: 17
Ln:17 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
I
7:02 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
c
basic.cpp X basic1.cpp basic2.cpp basic3.cpp X
1 // The output of this program can be different
2
// in different runs. Note that the program
// prints address of a Variable and a variable
// can be assigned different address in different
// runs.
#include <stdio.h>
34567890123
TELAH
10
11
12
13
14
15
16
17
int main()
B{
}
C++ source file
int x;
// Prints address of x
printf("%p", &x);
return 0;
e
Ĥer
ABC
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
X
Windows (CRLF)
UTF-8
7:02 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
*40C
basic.cpp X basic1.cpp basic2.cpp basic3.cpp X
1 // The output of this program can be different
2
// in d C:\WINDOWS\system32\cmd.exe
// prin
34567890HNM4
LLLAH
10
11
12
13
// can
// runs
#includ
Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>
int main(
B{
14
15
16 }
17
C++ source file
int x
printf("",&x);
return;
e
ABC
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
0
X
Windows (CRLF)
UTF-8
7:02 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
P
basic.cpp X basic1.cpp X basic2.cpp X basic3.cpp X
1 // The output of this program can be different
2
// in
C:\WINDOWS\system32\cmd.exe
3
// pri Microsoft Windows [Version 10.0.16299.967]
// can (c) 2017 Microsoft Corporation. All rights reserved.
// run
6 #incluc:\Users\vgulia>.
2455NHOSLS445
7
8 int man (
9 B{
TELAH
10
11
12
13
14
15
16
17
}
C++ source file
in x:
printf(", 4x);
return
e
e
N] /
ABC
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
7:02 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
|
basic.cpp X basic1.cpp X basic2.cpp basic3.cpp
1 // The output of this program can be different
2
// in diffe
C:\WINDOWS\system32\cmd.exe
34567890123
10
TELADAN
11
12
// prints a
// can be a Microsoft Windows [Version 10.0.16299.967]
// runs.
#include <s
int main()
B{
13
14
15
16 }
17
C++ source file
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>
int x;
// Prin adizess ct z
printf(",&x);
return
e
Ĥ e
A
ABC
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
☐
X
Windows (CRLF)
UTF-8
7:02 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
U
basic.cpp X basic1.cpp X basic2.cpp basic3.cpp X
1 // The output off
2
34567890123
10
TELADAN
11
12
13
14
15
16
17
// in different GC:\WINDOWS\system32\cmd.exe
// prints addresMicrosoft Windows [Version 10.0.16299.967]
// can be assign (c) 2017 Microsoft Corporation. All rights reserved.
// runs.
#include <stdio.c:\Users\vgulia>
int main()
B{
}
C++ source file
int x;
// Prints adires ct x
printf("%p", 4x);
return 0;
e
Ĥer
ABC
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
0
X
Windows (CRLF)
UTF-8
7:02 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
basic.cpp X basic1.cpp X basic2
1 // The output of this
C:\WINDOWS\system32\cmd.exe
2
// in different runs. Microsoft Windows [Version 10.0.16299.967]
// prints address of (c) 2017 Microsoft Corporation. All rights reserved.
// can be assigned di
// runs.
C:\Users\vgulia>
#include <stdio.h>
34567890123
10
TELADAN
11
12
int main()
B{
13
14
15
16 }
17
*40C
C++ source file
int x;
// Prints address of z
printf("p", &x);
return 0;
e
e
ABC
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
I
0
Windows (CRLF)
X
UTF-8
7:02 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
PC
basic.cpp X basic1.cpp X basic2.cpp
C:\WINDOWS\system32\cmd.exe
// The output of this pro
// in different runs. NotMicrosoft Windows [Version 10.0.16299.967]
// prints address of a va(c) 2017 Microsoft Corporation. All rights reserved.
// can be assigned differ
// runs.
C:\Users\vgulia>
#include <stdio.h>
1
2
34567890123
10
TELADAN
11
12
int main()
B{
13
14
15
16 }
17
C++ source file
int x;
// Prints address of
printf("%p", &x);
return 0;
e
e
N 1
ABC
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
T
Windows (CRLF)
X
UTF-8
7:02 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
*40C
basic.cpp X basic1.cpp X basic2.cpp Xb
C:\WINDOWS\system32\cmd.exe
1 // The output of this program.
2
// in different runs. Note that Microsoft Windows [Version 10.0.16299.967]
// prints address of a variable(c) 2017 Microsoft Corporation. All rights reserved.
// can be assigned different ad
// runs.
C:\Users\vgulia>
#include <stdio.h>
34567890123
10
TELADAN
11
12
int main()
B{
13
14
15
16 }
17
C++ source file
int x;
// Prints address of x
printf("p", &x);
return 0;
e
ABC
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
I
Windows (CRLF)
☐
UTF-8
I
X
<
7:02 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
P
basic.cpp X basic1.cpp basic2.cpp X basi
C:\WINDOWS\system32\cmd.exe
1 // The output of this program ca
2
// in different runs. Note that Microsoft Windows [Version 10.0.16299.967]
// prints address of a variable (c) 2017 Microsoft Corporation. All rights reserved.
// can be assigned different address in ALEEBERAS
// runs.
C:\Users\vgulia>
#include <stdio.h>
34567890123
10
TELADAN
11
12
int main()
B{
13
14
15
16 }
17
C++ source file
int x;
// Prints address of x
printf("p", &x);
return 0;
e
e
N 1
ABC
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
7:02 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
P
1
2
basic.cpp X basic1.cpp basic2.cpp basic3.cpp
// The output of this program can be
C:\WINDOWS\system32\cmd.exe
// in different runs. Note that the Microsoft Windows [Version 10.0.16299.967]
// prints address of a variable and (c) 2017 Microsoft Corporation. All rights reserved.
// can be assigned different address
// runs.
C:\Users\vgulia>
#include <stdio.h>
34567890123
10
TELADAN
11
12
int main()
B{
13
14
15
16 }
17
C++ source file
int x;
// Prints address of x
printf("p", &x);
return 0;
e
ABC
e
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
Windows (CRLF)
1
UTF-8
0
7:02 PM
3/6/2019
X
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
PC
basic.cpp X basic1.cpp basic2.cpp basic3.cpp:
C:\WINDOWS\system32\cmd.exe
// The output of this program can be dif
// in different runs. Note that the progMicrosoft Windows [Version 10.0.16299.967]
// prints address of a variable and a va(c) 2017 Microsoft Corporation. All rights reserved.
// can be assigned different address in
// runs.
C:\Users\vgulia>
#include <stdio.h>
1
2
34567890123
10
TELADAN
11
12
int main()
B{
13
14
15
16 }
17
C++ source file
int x;
// Prints address of x
printf("p", &x);
return 0;
e
ABC
N 1
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
T
7:02 PM
3/6/2019
X
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
PC
basic.cpp X basic1.cpp basic2.cpp basic3.cpp: X
C:\WINDOWS\system32\cmd.exe
1 // The output of this program can be diff
2
// in different runs. Note that the progr Microsoft Windows [Version 10.0.16299.967]
// prints address of a variable and a var (c) 2017 Microsoft Corporation. All rights reserved.
// can be assigned different address in d
// runs.
C:\Users\vgulia>
#include <stdio.h>
34567890123
10
TELADAN
11
12
int main()
B{
13
14
15
16 }
17
C++ source file
int x;
// Prints address of x
printf("p", &x);
return 0;
e
e
ABC
N 1
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
I
I
7:02 PM
3/6/2019
X
X
X
INSC:\Users\vgulia\Documents personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
PC
basic.cpp X basic1.cpp
basic2 cpp basic3.cpp X
C:\WINDOWS\system32\cmd.exe
1 // The output of this program can be dif Microsoft Windows [Version 10.0.16299.967]
// in different runs. Note that the prog(c) 2017 Microsoft Corporation. All rights reserved.
// prints address of a variable and a va
// can be assigned different address in C:\Users\vgulia>
// runs.
2
3
4
5
6 #include <stdio.h>
7
8 int main()
9 B{
10
11
12
13
14
15
16
17
}
C++ source file
int x;
// Prints address of x
printf("p", &x);
return 0;
e
A e
N
ABC
1
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
I
7:02 PM
3/6/2019
X
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
PC
basic.cpp X basic1.cpp basic2.cpp basic3.cpp X
C:\WINDOWS\system32\cmd.exe
1 // The output of this program can be difMicrosoft Windows [Version 10.0.16299.967]
2 // in different runs. Note that the proc(c) 2017 Microsoft Corporation. All rights reserved.
// prints address of a variable and a variable
3
4
// can be assigned different address in C:\Users\vgulia>
5
// runs.
6 #include <stdio.h>
7
8 int main()
9 B{
10
11
12
13
14
15
16
17
}
C++ source file
int x;
// Prints address of x
printf("p", &x);
return 0;
e
A e
N
W ABC
1
length: 325 lines: 17
Ln: 14 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
I
□
7:02 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
OPC
basic.cpp X basic1.cpp basic2.cpp basic3.cpp X
1 // The output of this program can be different
// in different runs. Note that the program
// prints address of a variable and a variable
// can be assigned different address in different
2
34567890123
10
TELTENN
11
12
13
14
15
16
17
// runs.
#include <stdio.h> |
int main()
8(
}
C++ source file
int x;
// Prints address of x
printf("%p", &x);
return 0;
I
e
A e
N
ABC
length: 325 lines: 17
Ln: 6 Col:20 Sel: 010
Windows (CRLF)
UTF-8
0
7:03 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents\personal_documents\C_Pointers\basic1.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
OPC
basic cpp basic1.cpp basic2.cpp
basic3.cpp X
1 // C program to demonstrate declaration of
2
// pointer variables.
3 #include <stdio.h>
4
5
6
7
8
9
10
11
TEE-
12
13
14
15
16
17
18
19
7722
int main()
(
20 }
21
C++ source file
int x = 10;
// 1) Since there is in declaration, ptr
// becomes a pointer varaible (a variable
// that stores address of another variable)
// 2) Since there is int before*, ptr is
// pointer to an integer type variable
int *ptr:
// & operator before x is used to get address
// of x. The address of x is assigned to ptr.
ptr = &x;
printf("%p",ptr);
return ;
e
A e
N
ABC
length: 514 lines: 21
Ln: 18 Col:22 Sel: 010
Windows (CRLF)
UTF-8
7:03 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic1.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
PC
basic.cpp X
basic1.cpp X basic2.cpp basic3.cpp X
C:\WINDOWS\system32\cmd.exe
1 // C program to demonstrate declaration Microsoft Windows [Version 10.0.16299.967]
// pointer variables.
234567890
10
11
12
13
TEETHNIEN 2
14
15
16
17
18
19
#include <stdio.h>
int main()
B(
20 }
21
C++ source file
int x = 10;
// 1) Since there is in declaratic:\Users\vgulia\Documents\personal
// becomes a pointer varaible (a va000000000061FE4C
// that stores address of another vaC:\Users\vgulia\Documents\personal
// 2) Since there is int before *, FT 15
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
// pointer to an integer type variabe
int *ptr;
e
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
// & operator before x is used to get address
// of x. The address of x is assigned to ptr.
ptr = &x;
printf("%p",ptr);
return ;
W
Aer
ABC
N]:/
documents\C_Pointers>basic.exe
documents\C_Pointers>
length: 514 lines: 21
Ln: 18 Col:22 Sel: 010
Windows (CRLF)
UTF-8
I
■
7:03 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic1.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
basic.cpp basic1.cpp X basic2.cpp basic3.cpp X
1
// C program to demonstrate
// pointer variables.
#include <stdio.h>
23456&SON
7
5 B{
8
9
TELLA1122
10
11
12
13
14
15
int main()
16
17
18
19
20 }
21
C++ source file
int x = 10;
// 1) Since there is in declaration, ptr
// becomes a pointer varaible (a variable
// that stores address of another variable)
// 2) Since there is int before*, ptr is
// pointer to an integer type variable
int *ptr:
declaration of
// & operator before x is used to get address
// of x. The address of x is assigned to ptr.
ptr = &x;
printf("%p",ptr);
return
e
Ae
N 1
length: 514 lines: 21
Ln: 12 Col:20 Sel: 010
Windows (CRLF)
UTF-8
7:03 PM
3/6/2019
X
INS
XC:\Users\vgulia Documents\personal_documents\C_Pointers\basic2.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
OPC
basic.cpp X basic1.cop basic2.cpp X
basic3.cpp X
1 // C program to demonstrate use of* for pointers in C
#include <stdio.h>
23456&SON
7
5 B{
8
9
10
11
TELL
12
13
int main()
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
C++ source file
// A normal integer variable
int Var = 10;
// A pointer variable that holds address of var.
int *ptr&Var;
// This line prints value at address stored in ptr.
// Value stored is value of variable "var"
printf("Value of Var %d\n", *ptr);
// The output of this line may be different in different
// runs even on same machine.
printf("Address of Var = p\n", ptr);
// We can also use ptr as lvalue (Left hand
// side of assignment)
*ptr = 20; // Value at address is now 20
// This prints 20
printf("After doing *ptr = 20, *ptr is %d\n", *ptr);
return 0;
e
e
N 1
length: 716 lines: 29
Ln:29 Col: 1 Sel:010
Windows (CRLF)
UTF-8
7:03 PM
3/6/2019
X
INS
XC\Users\vgulia\Documents personal documents\C_Pointers\basic2.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
C
basic.cpp X basic.cpp basic2.cpp X
basic3.cpp X
C:\WINDOWS\system32\cmd.exe
1 // C program to demonstrate use of* forMicrosoft Windows [Version 10.0.16299.967]
#include <stdio.h>
23456&SON
5 B{
7
8
9
10
int main()
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
C++ source file
// A normal integer variable
int Var = 10;
// A pointer variable that holds add000000000061FE4C
int *ptr &Var;
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic1.cpp -o basicl
// This line prints value at addressC:\Users\vgulia\Documents\personal_documents\C_Pointers>basic1.exe
// Value stored is value of variable000000000061FE44
printf ("Value of Var %d\n", *ptr) C:\Users\vgulia\Documents\personal_documents\C_Pointers>
// The output of this line may be different in
// runs even on same machine.
printf("Address of Var = p\n", ptr);
// We can also use ptr as 1value (Let hand
// side of assignment)
*ptr = 20; // Value at address is no 20
e
W ABC
Ae
// This prints 20
printf("After doing *ptr = 20, *ptr d\n", *ptr);
return 0;
ferent
length: 716 lines: 29
Ln: 16 Col:31 Sel: 010
Windows (CRLF)
UTF-8
I
M
7:03 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic2.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
404|
23456&SON
basic.cpp X basic.cpp basic2.cpp X basic3.cpp X
C:\WINDOWS\system32\cmd.exe
1 // C program to demonstrate use of for pointeMicrosoft Windows [Version 10.0.16299.967]
#include <stdio.h>
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
5 B{
7
8
9
int main()
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
C++ source file
// A normal integer variable
int Var = 10;
// A pointer variable that holds address of000000000061FE4C
int *ptr &Var;
// The output of this line may be different in different
// runs even on same machine.
printf("Address of Var = p\n", ptr);
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic1.cpp -o basic1
// This line prints value at address storedC:\Users\vgulia\Documents\personal_documents\C_Pointers>basic1.exe
// Value stored is value of variable "var"000000000061FE44
printf("Value of Var = %d\n", *ptr);
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
// We can also use ptr as 1value (Left hand
// side of assignment)
*ptr = 20; // Value at address is now 20
W
// This prints 20
printf("After doing *ptr = 20, *ptr is 3d\, *ptr);
return 0;
e
ABC
Ae
length: 716 lines: 29
Ln: 16 Col:31 Sel: 010
Windows (CRLF)
UTF-8
I
7:03 PM
3/6/2019
INS
X
0C:\Users\vgulia\Documents personal_documents\C_Pointers\basic2.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
404|
C:\WINDOWS\system32\cmd.exe
basic.cpp X basic.cpp basic2.cpp X basic3.cpp
1 // C program to demonstrate use of for pointers Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
#include <stdio.h>
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
23456&SON
5 B{
7
8
9
int main()
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
C++ source file
// A normal integer variable
int Var = 10;
// A pointer variable that holds address of v000000000061FE4C
int *ptr &Var;
// This line prints value at address stored
// Value stored is value of variable "var"
printf("Value of Var = %d\n", *ptr);
// We can also use ptr as 1value (Left hand
// side of assignment)
*ptr = 20; // Value at address is now 20
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic1.cpp -o basicl
iC:\Users\vgulia\Documents\personal_documents\C_Pointers>basic1.exe
// The output of this line may be different in ferent
// runs even on same machine.
printf("Address of Var = p\n", ptr);
e
000000000061FE44
Ae
// This prints 20
printf("After doing *ptr = 20, *ptr is d\n", *ptr);
return 0;
ABC
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
N 1
length: 716 lines: 29
Ln: 16 Col:31 Sel: 010
Windows (CRLF)
UTF-8
7:03 PM
3/6/2019
INS
X
[C:\Users\vgulia\Documents personal_documents\C_Pointers\basic2.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
404|
C:\WINDOWS\system32\cmd.exe
basic.cpp X basic.cpp basic2.cpp X basic3.cpp
1
// C program to demonstrate use of for pointers Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
#include <stdio.h>
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
23456&SON
5 B{
7
8
9
int main()
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
C++ source file
// A normal integer variable
int Var = 10;
// A pointer variable that holds address of va 999999999961FEAC
int *ptr &Var;
// This line prints value at address stored in C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic1.exe
// Value stored is value of variable "var"
printf("Value of Var = %d\n", *ptr);
// We can also use ptr as 1value (Left hand
// side of assignment)
*ptr = 20; // Value at address is now 20
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic1.cpp -o basic1
// The output of this line may be different in different
// runs even on same machine.
printf("Address of Var = p\n", ptr);
e
ABC
000000000061FE44
Ae
// This prints 20
printf("After doing *ptr = 20, *ptr is d\n", ptr);
return 0;
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
length: 716 lines: 29
Ln: 16 Col:31 Sel: 010
Windows (CRLF)
UTF-8
7:03 PM
3/6/2019
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic2.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
Opc
ON C:\WINDOWS\system32\cmd.exe
basic.cpp X basic1.cpp basic2.cpp X basic3.cpp
1 // C program to demonstrate use of for pointers in Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
2 #include <stdio.h>
3
4
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
5
6
7
8
9
10
11
12
13
TULLE
14
15
16
17
18
19
NNNNN22222
20
21
23
24
25
26
27
28
29
int main ()
B (
C++ source file
// A normal integer variable
int Var = 10;
// A pointer variable that holds address of var 000000000061FE4C
int *ptr &Var;
// This line prints value at address stored in C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic1.exe
// Value stored is value of variable "var"
printf ("Value of Var = %d\n", *ptr);
// We can also use ptr as 1value (Left hand
// side of assignment)
*ptr = 20; // Value at address is now 20
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic1.cpp -o basic1
// The output of this line may be different in different
// runs even on same machine.
printf ("Address of Var = p\n", ptr);
e
000000000061FE44
Aer
ABC
// This prints 20
printf("After doing *ptr = 20, *ptr is d\n", *ptr);
return 0;
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
N]:/
length: 716 lines: 29
Ln: 16 Col:31 Sel: 010
Windows (CRLF)
UTF-8
7:03 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic2.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window?
Opc
basic.cpp X basic1.cpp basic2.cpp X basic3.cpp
C:\WINDOWS\system32\cmd.exe
1 // C program to demonstrate use of* for pointers in C Microsoft Windows [Version 10.0.16299.967]
2 #include <stdio.h>
(c) 2017 Microsoft Corporation. All rights reserved.
3
4
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
5
6
7
8
9
10
11
12
13
TULLE
14
15
16
17
18
19
NNNNN22222
20
21
23
24
25
26
27
28
29
int main()
B (
C++ source file
// A normal integer variable
int Var= 10;
// A pointer variable that holds address of var.
int *ptr &Var;
// We can also use ptr as lvalue (Left hand
// side of assignment)
*ptr = 20; // Value at address is now 20
// This line prints value at address stored in ptr C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic1.exe
// Value stored is value of variable "var"
printf ("Value of Var = %d\n", *ptr);
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic1.cpp -o basic1
999999999961FEAC
e
// The output of this line may be different in different
// runs even on same machine.
printf ("Address of Var = p\n", ptr);
Aer
000000000061FE44
ABC
// This prints 20
printf("After doing *ptr = 20, *ptr is %d\n", *ptr);
return 0;
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
N]:/
length: 716 lines: 29
Ln: 16 Col:31 Sel: 010
Windows (CRLF)
UTF-8
7:03 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic2.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
Opc
basic.cpp X basic1.cpp basic2.cpp X basic3.cpp
C:\WINDOWS\system32\cmd.exe
1 // C program to demonstrate use of* for pointers in C Microsoft Windows [Version 10.0.16299.967]
2 #include <stdio.h>
(c) 2017 Microsoft Corporation. All rights reserved.
3
4
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
5
6
7
8
9
10
11
12
13
TULLE
14
15
16
17
18
19
NNNNN22222
20
21
23
24
25
26
27
28
29
int main()
B (
C++ source file
// A normal integer variable
int Var = 10;
// A pointer variable that holds address of var.
int *ptr &Var;
// We can also use ptr as 1value (Left hand
// side of assignment)
*ptr = 20; // Value at address is now 20
// This line prints value at address stored in ptr. C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic1.exe
// Value stored is value of variable "var"
printf ("Value of Var = %d\n", *ptr);
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic1.cpp -o basic1
990000009061FEAC
e
// The output of this line may be different in different
// runs even on same machine.
printf ("Address of Var = p\n", ptr);
Aer
000000000061FE44
ABC
// This prints 20
printf("After doing *ptr = 20, *ptr is %d\n", *ptr);
return 0;
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
N]:/
length: 716 lines: 29
Ln: 16 Col:31 Sel: 010
Windows (CRLF)
UTF-8
7:03 PM
3/6/2019
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic2.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
Opc
basic.cpp X basic1.cpp basic2.cpp X basic3.cpp
C:\WINDOWS\system32\cmd.exe
1 // C program to demonstrate use of* for pointers in C Microsoft Windows [Version 10.0.16299.967]
2 #include <stdio.h>
(c) 2017 Microsoft Corporation. All rights reserved.
3
4
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
5
6
7
8
9
10
11
12
13
TULLE
14
15
16
17
18
19
NNNNN22222
20
21
23
24
25
26
27
28
29
int main()
B (
C++ source file
// A normal integer variable
int Var = 10;
// A pointer variable that holds address of var.
int *ptr &Var;
// We can also use ptr as 1value (Left hand
// side of assignment)
*ptr = 20; // Value at address is now 20
// This line prints value at address stored in ptr. C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic1.exe
// Value stored is value of variable "var"
printf ("Value of Var = %d\n", *ptr);
999999999961FE4C
// This prints 20
printf("After doing *ptr = 20, *ptr is %d\n", *ptr);
return 0;
e
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic1.cpp -o basic1
// The output of this line may be different in different
// runs even on same machine.
printf ("Address of Var = p\n", ptr);
Aer
ABC
000000000061FE44
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
N]:/
length: 716 lines: 29
Ln: 16 Col:31 Sel: 010
Windows (CRLF)
UTF-8
7:03 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic2.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
Opc
C:\WINDOWS\system32\cmd.exe
basic.cpp X basic1.cpp basic2.cpp X basic3.cpp
1 // C program to demonstrate use of* for pointers in C Microsoft Windows [Version 10.0.16299.967]
2 #include <stdio.h>
(c) 2017 Microsoft Corporation. All rights reserved.
3
4
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
5
6
7
8
9
10
11
12
13
TULLE
14
15
16
17
18
19
NNNNN22222
20
21
23
24
25
26
27
28
29
int main()
B (
C++ source file
// A normal integer variable
int Var = 10;
// A pointer variable that holds address of var.
int *ptr &Var;
// We can also use ptr as 1value (Left hand
// side of assignment)
*ptr = 20; // Value at address is now 20
// This line prints value at address stored in ptr. C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic1.exe
// Value stored is value of variable "var"
printf ("Value of Var = %d\n", *ptr);
// This prints 20
printf("After doing *ptr = 20, *ptr is %d\n", *ptr);
return 0;
e
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic1.cpp -o basic1
909090909961FE4C
// The output of this line may be different in different
// runs even on same machine.
printf ("Address of Var = p\n", ptr);
e
ABC
000000000061FE44
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
N]:/
length: 716 lines: 29
Ln: 16 Col:31 Sel: 010
Windows (CRLF)
UTF-8
7:03 PM
3/6/2019
X
INS
XC:\Users\vgulia\Documents personal_documents\C_Pointers\basic3.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
OPC'l
basic.cpp basic1.cpp basic2.cpp
1
2345806
TELEN
7
10
9
11
12
1222 NN NN2
13
14
15
16
17
18 B
19
20
21
22
basic3.cpp
// C++ program to illustrate Pointer Arithmetic
// in C/C++
#include <bits/stdc++.h>
23
24
25
26
// Driver program
int main()
8(
C++ source file
// Declare an array
int v[3] = {10, 100, 200);
// Declare pointer variable
// This line prints value at address stored in ptr.
// Value stored is value of variable "var"
printf("Value of Var %d\n", *ptr);
// The output of this line may be different in different
// runs even on same machine.
printf ("Address of Var = p\n", ptr);
// We can also use ptr as 1value (Left hand
// side of assignment)
*ptr = 20; // Value at address is now 20
// This prints 20
printf("After doing *ptr = 20, *ptr is %d\n", *ptr);
return 0;
e
Ae
N] /
1
length: 461 lines: 26
Ln: 10 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
I
7:04 PM
3/6/2019
X
INS
XC\Users\vgulia\Documents personal_documents\C_Pointers\basic3.cpp - Notepad++
File Edit Search View Encoding Language Settings Tools Macro Run Plugins Window ?
*504|
basic.cpp basic1.cpp Xbasic2.cpp basic3.cpp X
1
234567890
LLENG
10
7 B(
11
123
12
13
14
15
16
7722NNNNN
17
18 8
19
20
21
22
23
24
25
26
// C++ program to illustrate Pointer Arithmetic
// in C/C++
#include <bits/stdc++.h>
// Driver program
int main()
C++ source file
// Declare an array
int v[3] = {10, 100, 200);
// Declare pointer variable
int *ptr:
// Assign the address of v[0] to ptr
ptr = v;
for (int i = 0; i < 3; i++)
{
printf("Value of *ptr = %d\n", *ptr);
printf("Value of ptr = Sp\n\n", ptr);
// Increment pointer ptr by 1
ptr++;
e
Ae
C:\WINDOWS\system32\cmd.exe
Microsoft Windows [Version 10.0.16299.967]
(c) 2017 Microsoft Corporation. All rights reserved.
C:\Users\vgulia>cd Documents\personal_documents\C_Pointers
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic.cpp -o basic
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic1.cpp -o basic1
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic1.exe
C:\Users\vgulia\Documents\personal_documents\C_Pointers>g++ basic2.cpp -o basic3
C:\Users\vgulia\Documents\personal_documents\C_Pointers>basic3.exe
999999999961FE4C
ABC
000000000061FE44
Value of Var = 10
Address of Var = 000000000061FE44
After doing *ptr 20, *ptr is 20
C:\Users\vgulia\Documents\personal_documents\C_Pointers>
N]:/
length: 461 lines: 26
Ln: 16 Col: 1 Sel: 010
Windows (CRLF)
UTF-8
7:04 PM
3/6/2019
X
INS
XAutoSave Off
E
File Home Insert Design Transitions Animations Slide Show Review View Help Storyboarding
X Cut
Layout -
Reset
Section-
Paste
5
6
7
8
Copy-
Format Painter
Clipboard
Slide 8 of 8
OG Thank you for watching!
DE
New
Slide-
Slides
24A AA EE-3
BIUS AV-Aa--A--
Click to add notes
New Microsoft PowerPoint Presentation - Saved to this PC
Ae
Font
SN/
E
Paragraph
DG
Picture Tools
Format
Text Direction -
[]Align Text -
Convert to SmartArt-
Tell me what you want to do
四\\□○□
ALLOG
617{}☆
Arrange Quick
Styles
Drawing
Shape Fill-
Shape Outline
Shape Effects -
Thank you for watching!
Please leave us your comments.
Notes
DI
88
Vishal Gulia
Find
Replace
Select -
Editing
3
Share
Dictate
Voice
4)
D
Comments
>«»
+76% 3
7:06 PM
3/6/2019