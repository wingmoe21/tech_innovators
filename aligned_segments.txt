0.845 - 6.071:  So we'll start with a little bit of a game.
7.292 - 7.772: There we go.
7.832 - 10.896: Hopefully most of you recognize that wallet.
10.976 - 12.978: It's out fairly soon from our friends at Sony.
18.328 - 19.608:  So that's an image from a game.
20.828 - 22.429: To be honest, that's probably a mock-up.
22.489 - 28.47: I suspect that's not a real screen grab, but it's increasingly difficult to tell with the latest hardware.
29.31 - 30.73: It's a pretty nice image either way.
32.31 - 35.471: So what are we looking at there?
35.491 - 38.672: What is an image from a game?
38.772 - 40.072: What does it consist of?
41.632 - 44.253: What are the key, the building blocks of it, if you like?
45.113 - 45.293: Yeah?
46.792 - 47.252:  Models?
47.492 - 48.052: Yeah, OK.
48.072 - 49.253: What are models made of?
50.673 - 51.253: Polygons.
51.293 - 51.833: There we go.
52.153 - 59.035: Yeah, so everything in there, 3D models made out of 2D polygons put together in a 3D world.
60.255 - 61.795: But that's not what we can see there, is it?
61.835 - 62.755: That's a 2D image.
63.856 - 64.836: So what's the image made of?
67.637 - 67.817: Yeah?
68.477 - 69.057: Pixels.
69.137 - 69.597: There we go.
71.998 - 76.721:  So every spot, if you like, on a screen has an RGB value.
77.402 - 79.283: And that's effectively what we're looking at.
79.323 - 94.532: But when you start at home playing, well, go to war, when that comes out, you've got a 2D telly displaying a 2D image, which is built from these 3D models, which have been animated, put into the world.
95.533 - 100.32:  And hopefully highly enjoyable games or highly boring games.
100.34 - 101.962: There's plenty of them around as well.
102.543 - 107.409: And of course, this module, I should say, really the key of it, the key of the
110.203 - 131.342:  of the lectures and the exam really is how do we turn those 3D models, I'm pointing at that as if that's a 3D model, how do you turn these 3D models created by artists into that 2D image, which is moving, it's in real time, has to react, if you press jump, you want the guy to jump on the screen, how does that happen in real time?
131.462 - 132.964: What algorithms do we use?
134.963 - 135.665:  to make that happen.
135.965 - 139.914: And that's really what the core of this module is all about.
141.431 - 143.352:  We'll give you some practice in doing that.
143.392 - 148.116: We'll be using Unity, which is an industry standard engine to do that.
149.056 - 158.923: But all the lectures are about, they're not really about the, well, they're not at all about the implementation in Unity, they're about what's going on on the hardware.
159.483 - 164.967: Why is Unity doing the thing it does in order to get those screens running as fast as possible?
166.567 - 168.068:  So just, I guess, a remind.
168.108 - 170.611: I'm sure you're all reasonably aware of this.
170.991 - 183.503: If you go and watch a Pixar movie, or Avengers Endgame, or whatever it is, there's all this computer-generated imagery in all these fantastic movies these days.
184.184 - 188.427: Pixar famously devotes 36 hours to rendering each and every frame.
190.933 - 195.515:  What I mean by rendering a frame, so we've got those 3D models in the scene.
195.535 - 200.236: We're going to go through that process of turning each frame into a 2D image.
200.796 - 203.617: The big thing that we spend the time on is getting the lighting right.
203.637 - 205.738: There's an awful lot of work that goes into lighting.
206.318 - 207.218: So you have your models.
207.238 - 208.019: You can color them in.
209.199 - 213.423:  how the lit within the scene is where most of the time takes place.
213.463 - 221.71: And that's really why whatever the latest Pixar movie looks so much better than whatever, well, Code of War, God in Iraq, for example.
223.18 - 229.823:  So then, sorry, Pixar famously spends 36 hours on every single frame of their movies.
230.183 - 231.103: They do them in parallel.
231.143 - 235.064: They don't just do one, and then 36 hours later, they move on to the next one.
235.105 - 236.385: They do lots of them in parallel.
236.405 - 244.168: But every frame gets 36 hours of processing time, effectively turning those 3D models into a 2D image for the screen.
245.66 - 246.58:  Can't do that in games.
247.58 - 253.342: We've got 33 milliseconds to do exactly the same thing as Pixel have 36 hours to do.
256.362 - 257.982: So we've got a pretty efficient day, really.
259.683 - 261.823: Why do we only have 33 milliseconds?
267.784 - 268.925: Get 60 frames a second.
269.965 - 274.146: OK, but why can't we do lots of them in parallel so we can spend a minute on each one?
274.546 - 275.186: Is this going to change?
276.069 - 276.65:  It's going to change.
276.67 - 278.172: It has to react to what the player's doing.
278.252 - 279.835: You press jump, you want Mario to jump.
280.475 - 283.74: You don't want him going off and coming back 36 hours later saying, yeah, I've jumped now.
286.384 - 291.191: And it's similar techniques used with Pixar, as with Nintendo.
292.096 - 298.52:  But the key here is to get our rendering processes working as fast as possible while still looking amazing.
299.12 - 301.401: You shouldn't be cutting corners just to get speed.
301.421 - 302.542: It has to still look great.
303.362 - 308.745: And hopefully, one of the things we get across during this lecture series is that balancing act.
309.425 - 312.007: You can always chuck in more fidelity, make it look greater.
312.567 - 313.788: That's going to bring the frame rate down.
314.468 - 317.39: So you've got to find ways of maintaining the visual quality
318.228 - 319.229:  and also the frame rate.
319.289 - 327.434: Because I'm sure you all know, you play some of these big open world games, you go somewhere, it drops down to 20 frames per second, and you're going like that.
328.314 - 337.9: And if you're in virtual reality, really, you've got to be 120 frames per second, because you want this eye to be going at 60, and this eye to be going at 60, rendering the same scene twice.
338.681 - 343.023: So you've got to be even faster on virtual reality applications.
345.945 - 347.106: Right, I've forgotten what's next.
348.174 - 354.681:  Yeah, so as I say, the main thing we'll be talking about through the lecture series is how do we do that in real time?
355.301 - 360.206: How do we turn those 3D models into a 2D image at a rate of 60 frames per second?
360.486 - 362.128: What's going on on the hardware, really?
362.148 - 366.793: We're going to talk about how the GPU does this and how we as programmers harness
367.293 - 369.635:  the GPU to achieve what we want to do.
369.655 - 372.497: So we can get fantastic images like Mario there.
373.138 - 377.541: I'm a bit of a Nintendo fan, so there will be a few pictures of Mario and Zelda throughout.
377.901 - 380.123: I'm guessing you are mostly PC players.
381.965 - 382.785: A few shaking heads.
383.246 - 384.467: Who's a PC game player?
386.048 - 387.349: Yeah, most hands go up.
387.929 - 391.692: Why do I hate PC game development as a game developer?
395.175 - 396.236: They're all different.
397.836 - 403.058:  If I get my game to run on my PlayStation 5, it runs on yours, it runs on yours, it runs on the one in Taiwan.
404.019 - 405.199: Not a chance on computers.
405.219 - 408.521: You've all got different graphics cards and audio cards and all the rest of it.
408.561 - 409.621: It's an absolute nightmare.
410.262 - 412.523: But I respect your choices, however wrong they might be.
417.014 - 417.294:  Right.
418.375 - 425.36: So, as mentioned, this lecture is just an introduction to this whole process.
425.42 - 433.546: We'll give you an overview of each step along the way, give a sense of what the module is and what's expected from the coursework as well.
435.688 - 440.351: As was mentioned by my friend at the back there, our models in the game, the 3D models,
443.051 - 446.594:  They're built from a sequence of polygons, typically triangles.
447.134 - 448.635: So there's Mario again.
448.655 - 455.621: And we all know he's built a mesh of triangles, the quartz here.
456.041 - 458.503: The quartz is just two triangles put together.
458.523 - 463.647: Actually, it's more abstract than that.
463.687 - 466.529: The models aren't really sets of triangles.
466.569 - 467.83: They're sets of points in space.
468.652 - 472.894:  And those points in space are connected together in polygons, usually in triangles.
472.914 - 476.576: You can get a whole string of triangles to put together to make the model.
476.756 - 480.418: So a point in space is known as a vertex.
